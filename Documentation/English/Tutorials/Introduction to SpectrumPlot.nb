(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    307445,       7062]
NotebookOptionsPosition[    291876,       6542]
NotebookOutlinePosition[    295308,       6624]
CellTagsIndexPosition[    295227,       6619]
WindowTitle->Introduction to SpectrumPlot
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["SPECTRUM PLOT TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"AverageSpectrum\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/AverageSpectrum"], "\<\"CalculateRMS\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/CalculateRMS"], "\<\"CleanFITSHeader\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/CleanFITSHeader"], \
"\<\"ComposeXYSpectrum\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/ComposeXYSpectrum"], "\<\"DeleteKey\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/DeleteKey"], "\<\"FindDecAxis\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/FindDecAxis"], "\<\"FindDuplicateKeys\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/FindDuplicateKeys"], "\<\"FindRAAxis\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/FindRAAxis"], "\<\"FindSpectralAxis\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/FindSpectralAxis"], "\<\"FormatSpectrum\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/FormatSpectrum"], \
"\<\"GetAbsoluteSpectralAxis\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/GetAbsoluteSpectralAxis"], \
"\<\"GetCoordinateSystem\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/GetCoordinateSystem"], "\<\"GetKeyValue\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/GetKeyValue"], \
"\<\"GetObservedCoordinates\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/GetObservedCoordinates"], "\<\"Import\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Import"], "\<\"ImportSpectrum\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/ImportSpectrum"], "\<\"JoinHeader\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/JoinHeader"], "\<\"ListTFIELDS\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/ListTFIELDS"], "\<\"MaskSpectrum\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/MaskSpectrum"], "\<\"MetaDataPattern\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/MetaDataPattern"], "\<\"MetaDataQ\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/MetaDataQ"], "\<\"MultipleSpectraQ\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/MultipleSpectraQ"], "\<\"Part\"\>":>
       Documentation`HelpLookup["paclet:ref/Part"], "\<\"PutKeyValue\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/PutKeyValue"], "\<\"RegridSpectralAxis\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/RegridSpectralAxis"], \
"\<\"SmoothSpectrum\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SmoothSpectrum"], \
"\<\"SpectralAxisConfiguration\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SpectralAxisConfiguration"], \
"\<\"SpectralAxisType\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SpectralAxisType"], "\<\"SpectrumArrayQ\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SpectrumArrayQ"], "\<\"SpectrumPattern\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SpectrumPattern"], "\<\"SpectrumQ\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SpectrumQ"], "\<\"StripHeaderComments\"\>":>
       Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/StripHeaderComments"], \
"\<\"SubtractBaseline\"\>":>Documentation`HelpLookup[
       "paclet:SpectrumPlot/ref/SubtractBaseline"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"SpectrumPlot/tutorial/Introduction to \
SpectrumPlot\"\>":>None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["SpectrumPlot/tutorial/Introduction to SpectrumPlot"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/SpectrumPlot/tutorial/\
Introduction to SpectrumPlot.html"], StandardForm]], "Input", 
              TextClipboardType -> "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$2020], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "SpectrumPlot/tutorial/Introduction to SpectrumPlot", ".html"]], 
           None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->144127618],

Cell[CellGroupData[{

Cell["Introduction to SpectrumPlot", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Spectrum data model"],
      "paclet:SpectrumPlot/tutorial/Introduction to SpectrumPlot#139120837",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Working with spectra"],
      "paclet:SpectrumPlot/tutorial/Introduction to SpectrumPlot#677377107",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Spectrum formatting"],
      "paclet:SpectrumPlot/tutorial/Introduction to SpectrumPlot#284766540",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Data Reduction"],
      "paclet:SpectrumPlot/tutorial/Introduction to SpectrumPlot#286520711",
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> 
            Association[{
              "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
               "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> \
<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.0-c060 61.134777, \
2010/02/12-17:32:00> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS5 Macintosh \
xmpMM:InstanceID=xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A \
xmpMM:DocumentID=xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A \
stRef:documentID=xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
The function definitions in the SpectrumPlot`context provide support for \
importing and displaying astronomical spectral data.\
\>", "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->150216909],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<SpectrumPlot`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->180576222],

Cell[CellGroupData[{

Cell["Spectrum data model", "Section",
 CellID->139120837],

Cell[TextData[{
 "Astronomical spectra are usually stored in the FITS file format, composed \
of a header (",
 ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"],
 "[<",
 ButtonBox["FITS",
  BaseStyle->"Link",
  ButtonData->"paclet:SpectrumPlot/ref/FITS"],
 " file>,\"Metadata\"]) and the actual spectrum data (",
 ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"],
 "[<",
 ButtonBox["FITS",
  BaseStyle->"Link",
  ButtonData->"paclet:SpectrumPlot/ref/FITS"],
 " file>,\"RawData\"]). The header contains all information necessary to \
assign the data to an astronomical observation (e.g. object name, \
coordinates, OBS-ID, etc.), to describe the kind of data (e.g. spectral maps, \
integrated intensity maps, single spectra, etc.), to specify physical units \
of the data content (e.g. unit of the spectral axis, velocity or frequency, \
unit of the data axis, e.g. Jansky, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"erg", "/", "s"}], "/", 
     SuperscriptBox["cm", "2"]}], "/", "sr"}], "/", "Hz"}]], "InlineFormula"],
 ", etc.) and any other explanatory information in order to make sense of the \
data."
}], "Text",
 CellID->267157330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Import",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Import"], "[", 
     RowBox[{
      StyleBox["file", "TI"], ",", "\"\<FITS\>\"", ",", "\"\<Metadata\>\""}], 
     "]"}], Cell["imports header information", "TableText"]},
   {
    RowBox[{
     ButtonBox["Import",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Import"], "[", 
     RowBox[{
      StyleBox["file", "TI"], ",", "\"\<FITS\>\"", ",", "\"\<RawData\>\""}], 
     "]"}], Cell["imports raw (unscaled) data", "TableText"]}
  }]], "DefinitionBox",
 CellID->2096742444],

Cell["Manual import of spectrum data from FITS files.", "Caption",
 CellID->1891092685],

Cell[TextData[{
 "Many functions from the SpectrumPlot`context work on a ",
 StyleBox["spectrum data object",
  FontSlant->"Italic"],
 ". A spectrum data object is a List of the form: List[header information, \
raw data]. It has to be created from the spectrum ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FITS"]],"paclet:Global/ref/FITS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " file. If the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FITS"]],"paclet:Global/ref/FITS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " file contains only a single spectrum this is trivial: The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FITS"]],"paclet:Global/ref/FITS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " header gives all required header information, the data part gives the \
spectrum data. "
}], "Text",
 CellID->58814942],

Cell[CellGroupData[{

Cell["FITS Header", "Subsection",
 CellID->199893152],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FITS"]],"paclet:Global/ref/FITS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " file is comprised of segments called Header/Data Units (HDUs), where the \
first HDU is called the `Primary HDU', or `Primary Array'. Any number of \
additional HDUs may follow the primary array. These additional HDUs are \
referred to as ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FITS"]],"paclet:Global/ref/FITS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " `extensions'. \[LineSeparator]Every HDU consists of an ASCII formatted \
`Header Unit' followed by an optional `Data Unit'. Each header or data unit \
is a multiple of 2880 bytes long. If necessary, the header or data unit is \
padded out to the required length with ASCII blanks or NULLs depending on the \
type of unit."
}], "Text",
 CellID->918978030],

Cell["\<\
Each header unit contains a sequence of fixed-length 80-character keyword \
records which have the general form: 
KEYNAME = value / comment string\
\>", "Text",
 CellID->187674665],

Cell["\<\
The keyword names may be up to 8 characters long and can only contain \
uppercase letters A to Z, the digits 0 to 9, the hyphen, and the underscore \
character. The keyword name is (usually) followed by an equals sign and a \
space character in columns 9 and 10 of the record, followed by the value of \
the keyword which may be either an integer, a floating point number, a \
complex value (i.e., a pair of numbers), a character string (enclosed in \
single quotes), or a Boolian value (the letter T or F). Some keywords, (e.g., \
COMMENT and HISTORY) are not followed by an equals sign and in that case \
columns 9 - 80 of the record may contain any string of ASCII text.\
\>", "Text",
 CellID->16903384],

Cell["\<\
Each header unit begins with a series of required keywords that specify the \
size and format of the following data unit. A 2-dimensional image primary \
array header, for example, begins with the following keywords: 
SIMPLE  =                    T / file conforms to FITS standard
BITPIX  =                   16 / number of bits per data pixel
NAXIS   =                    2 / number of data axes
NAXIS1  =                  440 / length of data axis 1
NAXIS2  =                  300 / length of data axis 2\
\>", "Text",
 CellID->847847178],

Cell["\<\
The required keywords may be followed by other optional keywords to describe \
various aspects of the data, such as the date and time of the observation. \
COMMENT or HISTORY keywords are also frequently added to further document the \
contents of the data file. \
\>", "Text",
 CellID->77067171],

Cell["\<\
The last keyword in the header is always the `END' keyword which has blank \
value and comment fields. The header is padded with additional blank records \
if necessary so that it is a multiple of 2880 bytes (equivalent to 36 80-byte \
keywords) long. Note that the header unit may only contain ASCII text \
characters ranging from hexadecimal 20 to 7E); non-printing ASCII characters \
such as tabs, carriage-returns, or line-feeds are not allowed anywhere within \
the header unit.\
\>", "Text",
 CellID->869307705],

Cell["Header information from example spectrum:", "MathCaption",
 CellID->278991019],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"head", "=", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<SpectrumPlot\>\"", ",", "\"\<BIMAChannelMap\>\""}], "}"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"head", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "6"}], "]"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->600539441],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\"SIMPLE\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"BITPIX\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "32"}], ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS1\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"32", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS2\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"32", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS3\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"256", ",", "\<\"\"\>"}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 ImageSize->{116, 87},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]//TableForm=",
 CellID->201178399]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StripHeaderComments", "/@", 
  RowBox[{"head", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "6"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[21]:=",
 CellID->105523731],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"SIMPLE\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"BITPIX\"\>", "\[Rule]", 
    RowBox[{"-", "32"}]}], ",", 
   RowBox[{"\<\"NAXIS\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"NAXIS1\"\>", "\[Rule]", "32"}], ",", 
   RowBox[{"\<\"NAXIS2\"\>", "\[Rule]", "32"}], ",", 
   RowBox[{"\<\"NAXIS3\"\>", "\[Rule]", "256"}]}], "}"}]], "Output",
 ImageSize->{526, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->79267263]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CleanFITSHeader",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/CleanFITSHeader"], "[", 
     StyleBox["header", "TI"], "]"}], Cell[
    "strips all comments from the header entries", "TableText"]},
   {
    RowBox[{
     ButtonBox["StripHeaderComments",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/StripHeaderComments"], "[", 
     RowBox[{
      StyleBox["header", "TI"], " ", 
      StyleBox["line", "TI"]}], "]"}], Cell[
    "removes comments from a header entry", "TableText"]},
   {
    RowBox[{
     ButtonBox["JoinHeader",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/JoinHeader"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "]"}], Cell[
    "join headers ", "TableText"]}
  }]], "DefinitionBox",
 CellID->602953070],

Cell["Header formatting functions.", "Caption",
 CellID->81663761],

Cell["\<\
SpectrumPlot` provides functions to access and modify the header information.\
\>", "Text",
 CellID->920779636],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GetKeyValue",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/GetKeyValue"], "[", 
     RowBox[{
      StyleBox["head", "TI"], ",", 
      StyleBox["key", "TI"]}], "]"}], Cell[TextData[{
     "gets the value of ",
     Cell[BoxData[
      StyleBox["key", "TI"]], "InlineFormula"],
     " from the ",
     Cell[BoxData[
      StyleBox["header", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["PutKeyValue",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/PutKeyValue"], "[", 
     RowBox[{
      StyleBox["head", "TI"], ",", 
      RowBox[{
       StyleBox["key", "TI"], "\[Rule]", 
       StyleBox["val", "TI"]}]}], "]"}], Cell[TextData[{
     "puts ",
     Cell[BoxData[
      StyleBox["key", "TI"]], "InlineFormula"],
     "=",
     Cell[BoxData[
      StyleBox["value", "TI"]], "InlineFormula"],
     " into the ",
     Cell[BoxData[
      StyleBox["header", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DeleteKey",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/DeleteKey"], "[", 
     RowBox[{
      StyleBox["head", "TI"], ",", 
      StyleBox["key", "TI"]}], "]"}], Cell[TextData[{
     "deletes the ",
     Cell[BoxData[
      StyleBox["key", "TI"]], "InlineFormula"],
     " from the ",
     Cell[BoxData[
      StyleBox["header", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FindDuplicateKeys",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/FindDuplicateKeys"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "finds keys that occur in ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["head", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ListTFIELDS",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/ListTFIELDS"], "[", 
     StyleBox["head", "TI"], "]"}], Cell["describes all TFIELDS", "TableText"]}
  }]], "DefinitionBox",
 CellID->68756532],

Cell["Access or modify header information.", "Caption",
 CellID->857629111],

Cell["\<\
Some special functions are available to identify astronomically important key \
values:\
\>", "Text",
 CellID->334972571],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FindSpectralAxis",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/FindSpectralAxis"], "[", 
     StyleBox["header", "TI"], "]"}], Cell[
    "which data axis corresponds to the spectral axis", "TableText"]},
   {
    RowBox[{
     ButtonBox["FindRAAxis",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/FindRAAxis"], "[", 
     StyleBox["header", "TI"], "]"}], Cell[
    "which data axis corresponds to the Right Ascension axis", "TableText"]},
   {
    RowBox[{
     ButtonBox["FindDecAxis",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/FindDecAxis"], "[", 
     StyleBox["header", "TI"], "]"}], Cell[
    "which data axis corresponds to the Declination axis", "TableText"]}
  }]], "DefinitionBox",
 CellID->374016427],

Cell["Identify astronomical dimension.", "Caption",
 CellID->522112224],

Cell["\<\
Identify which data dimension correspond to the spectral/spatial data\
\>", "MathCaption",
 CellID->836781195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSpectralAxis", "[", "head", "]"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->2058623809],

Cell[BoxData["3"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->2277538]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRAAxis", "[", "head", "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->18074983],

Cell[BoxData["1"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[24]=",
 CellID->652852132]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDecAxis", "[", "head", "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->345306587],

Cell[BoxData["2"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[25]=",
 CellID->342891254]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FITS Data", "Subsection",
 CellID->521222371],

Cell["\<\
The primary data array can contain a 1-999 dimensional array of 1, 2 or 4 \
byte integers or 4 or 8 byte floating point numbers using IEEE \
representations. A typical primary array could contain a 1-D spectrum, a 2-D \
image, or a 3-D data cube.\
\>", "Text",
 CellID->314150999],

Cell["Data from example spectrum:", "MathCaption",
 CellID->439669535],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<SpectrumPlot\>\"", ",", "\"\<BIMAChannelMap\>\""}], "}"}], 
     "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "data", "]"}]}], "Input",
 CellLabel->"In[11]:=",
 CellID->91838802],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "256", ",", "32", ",", "32"}], "}"}]], "Output",
 ImageSize->{125, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->456417867]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"head", "[", 
   RowBox[{"[", 
    RowBox[{"3", ";;", "6"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->50446376],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\"NAXIS\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS1\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"32", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS2\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"32", ",", "\<\"\"\>"}], "}"}]}]},
     {
      RowBox[{"\<\"NAXIS3\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"256", ",", "\<\"\"\>"}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 ImageSize->{109, 57},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]//TableForm=",
 CellID->77063853]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " stores the data in reverse order as given by the header NAXIS keys. It \
also wraps the data cube in an additional ",
 ButtonBox["List",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/List"],
 ", increasing the dimension by one. "
}], "Text",
 CellID->87014715],

Cell["Getting rid of superfluous dimensions", "MathCaption",
 CellID->84659338],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"flattenCube", "[", 
    RowBox[{"data", ",", "head"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "data", "]"}]}], "Input",
 CellLabel->"In[13]:=",
 CellID->119821856],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "256", ",", "32", ",", "32"}], "}"}]], "Output",
 ImageSize->{107, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->152950740]
}, Open  ]],

Cell["\<\
The data consists of a 32\[Times]32 positions raster map. At each position a \
spectrum with 256 spectral channels is taken.  \
\>", "Text",
 CellID->632934013],

Cell["Accessing the data", "MathCaption",
 CellID->517735679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "All", ",", "All"}], "]"}], "]"}], "//", 
  "Dimensions"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->269877034],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "32"}], "}"}]], "Output",
 ImageSize->{57, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[40]=",
 CellID->330549164]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Min", "@", "#"}], ",", 
     RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "data", "]"}], ",", "Indeterminate"}], 
   "]"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->222267338],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "36.65473937988281`"}], ",", "34.14933776855469`"}], 
  "}"}]], "Output",
 ImageSize->{135, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->52527193]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "130", ",", "All", ",", "All"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PixelConstrained", "->", "True"}], ",", 
   RowBox[{"DataReversed", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[50]:=",
 CellID->46005768],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3XlwnHd9x3GpdGhLy7RcM0xn2sKUdihQKG2hKU2nUOiRcIW0IZRCwGms
4ABOHEOCHV/yLd/3mbVl2bJzAQ5x1vch+ZCtayXZWh1737vT/tF2+mdn0pXX
u15J+/lGj2JJ7qP3b96YlaO193n2ea2k9e/5PR989MkHa36pqqpq7q/mf3lw
xrOfe/rpGfP+6bfyHzw0e+6sx2fPfOy+2T+a+fjMp+959G353/xAdeF/Q7ff
YDAYDAaDwWAw7sDweWo8vql+EHduDNuc/Ac3R603M5WPaWJGxltbUzN8+1y9
vY5HcW+UDogKe2xSHoFbfI3YnPyHhd1YuuGmUfZCcuumu7fX6bi9f4q3Ru+x
iR0Zr9d3E7U7fI3cnPytstd1d2xj5VHY5umzvQ5Hhb0xiQe9a3wVxjBfZd8Y
uGkbh4/i4TNdttfJKHxHM/KL+aS+/LjsuZheX7+Gjp8yVK7f3vGNsj0zbI9N
1l/upueibHNc/vPI0E/rw545l2+vw+HzlPZB0deoPTYZw72+XP1+WunNsfIt
dPH2jmPc3kXFtzdG7zEGg8FgMBgMBoPBYDAYDAaDwbhTY+xzGmsYjGk8xkHG
0ZzG/L0XV1UVKr9tt/lyWLXmQkC1tlmW6FmvivdsUGXbn5Nd+WGp/HaVf5g6
/oDsxIOq7KUnVOnT35CdksWvb1ItPuVXzT/eq1p9YTBffmMLN8oL9e9XbbkS
Vi0/06+quzCoivp3qrJXnlQljn5BFdn3AVV0bbUqtONdFcvvn9DWdxS67Wuc
04DffE4jvvCFL0dkyr/evemcRsNXpmOxau4velQLTvSqjCelsSelCvd7VMYh
mu6sLZXfrvIPDcvPt8dVwYEGVfz6RlW6Y4nK2L0bL4VUC0/4VSvODuTLb2zh
RnmhgXqV8eCTXatVmfMzVImff1b2s78ZR7FDH1WFtvyaKrmqumJDB8OK6kIj
fI1jGvCbzmkc8e0ovv6/+6oYvsp9Vfz5a+xkHM1pNL4ndI2vEeFrOvvKV+Hr
l8NpwGOf04gvfOHLERlHA1/4wtfEDXzhC1/4whe+8IUvfOELX/jC16T5Cu9+
X8WSv/gHVXCwUXdItfNaVLWvM6EKDh5Uhfv3qaK9O1QNXUnV6vODqk2XQypj
b6Q7l6lyrc+qQgMHVOuag6p9HQlVonuNyngYqZMPqeIvfkoVa/y4KvHTv1al
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
2lE65ke3+KRftfCEzDhElxbDF77whS984Qtf+MIXvvCFL3zhC1/4whe+8IUv
fOELX/jCF77w5dTX2qZAxXKtz6gMRJsuhVR722Mq41/2jRO9jWXwjbXujXkp
1kXMz31HFX/pHlV4z/tVoW2/rgrveq8qduSTKmOhfuNy5JmOJbpFqkjfXpWx
yHxooEFlrD8/33tDZaxTseikX1W6O77whS984Qtf+MIXvvCFL3zhC1/4whe+
8IUvfOELX/jCF77whS+nvrKXvl8xdd3zfMY54BH/LpUxp8J4UoypAvs64ipj
rfv02W+pEj/7rCri+R1VaNs7db+hih74Q1X6zDdVuatzZW3zVNaV5btWqtKd
S1TGvYz5NluuhFW1p/tUC0/0qox71V0IqBaf8hfCF77whS984Qtf+MIXvvCF
L3zhC1/4whe+8IUvfOELX/jCF77w5dRXZN/vVcx48Mb1sjPnHlEZYI1F5o0L
i8dubFFlmx9XJV/9O1W0/kOq4IZqVbxOFlovix78iMq4pHuya7Uq3bFEleyu
UxmLNlgL9es9b2QsHbDi7IBq65WwKtzvURlzew52pwrhC1/4whe+8IUvfOEL
X/jCF77whS984Qtf+MIXvvCFL3zhC1/4cupLnWGdbZuvir/8GVX69DdUmfMz
VMb1zbOXf6gyztlPvna/Kv7yX6qi9b+vCm6sVsXqZMHNb1cZc0WM6RbWq41e
w99YH8BYfmF7S0QV9e9UJbrXqoz15/e2xVThvudVxlIP5qUEbl2YHl/4whe+
8IUvfOELX/jCF77whS984Qtf+MIXvvCFL3zhC1/4wpdTX8nXv1y5V/9elWl6
TJW7+rQq3blMZSz8nr30hCp14kFV4ujnVfEX/kwV0xlTO8K736eKHf4TVaZj
scq4Antp7sHoDETx6xtVjT1plXH5eGMRAONa6tHenSoDkSHFWHHCvB791wrh
C1/4whe+8IUvfOELX/jCF77whS984Qtf+MIXvvCFL3zhC1/4cuorffbbFbOu
A+59QJVreUplnNse8e9RGfcyruidaZqpSh67X5U+9bBM7KWhHfX6l1SZ5hpV
sqtOVZpgMLr49c2q2I1tKuNkeWP+xu7WmCrUv19lWDZnmMhVBaK9O1TGZdaN
JRFSJx8q9NZ8+Tw1Hl/ZBzdHrTeDL3zhq6KvMZEp+2/FT85/WPis0g184Qtf
5b7GTOaNNzJer2/o19pbn5y/VfyUYULxhS98OSVz+y5ln1z8jLKb+MIXvpyT
qfjJxtev8oEvfLneV/kBPw4yoz+Zn7/whS9HX7/Mn78qfF3j/UN84cuBL/v9
wzEPfOELXxM3huZvvHZf5fQjzLQvVBkzMYx/o6/vTKiMexmnohun2BsP3rii
t3EvY139XOszKuMK7MbrRsq3TGVMnAgEDquMSRrGvQzLie51KuMRGhNCjAPA
+AONV+zSSwG+8IUvfOELX/jCF77whS984Qtf+MIXvvCFL3zhC1/4whe+8IUv
p74WV1VVzJg4ERw8pDL+Id5Yz3xPW0xlzFjItC/QSQ7GifkWIr3uQebCv6my
F7+nSncuVRmHTfz6JpVBz7hgunWVgZ4NqkPdKdWu1qjKABvx71IZqwpYzPUc
mM2XQ4XwhS984Qtf+MIXvvCFL3zhC1/4whe+8IUvfOELX/jCF77whS983Slf
0d5tqmVn+lWHelIqY8/vuCoznkpjnfaIf7fKmGFi0LPWIuhYpDIO0YaupGpb
S0QV7turyrY9pzJWS8hd+7HqYFdSVXu6T2UcG8aqAsarjbF7jZevZPcaVeml
G1/4whe+8IUvfOELX/jCF77whS984Qtf+MIXvvCFL3zhC1/4wted8mVU70uo
jLO5c9fmqgwOC070quZ5b6g8HXGVMWPBmHyy5UpYtfLcgGpNU0BlIDIWfjcW
YzeOKGO+jfEIF57wqxadlAUCR1TZ9gUq45Ut3O9RGa/YxoSQ0qQRfOELX/jC
F77whS984Qtf+MIXvvCFL3zhC1/4whe+8IUvfOELX5Pgy8g4nT957IsqYyV5
4+hdflaW7liiypx7RGVMMFh80q9afrZfZczfMJb3N6asxG5sVRnrOey6FlUZ
u3ddc0BlnLNvLNqQvfSEypi/YVyBfdW5AVXm3HdUpWMVX/jCF77whS984Qtf
+MIXvvCFL3zhC1/4whe+8IUvfOELX/jC19T62n41opIXUn/tvvSph1XG6u5z
jnar0qe+rood/rhqf2dC9UhDp+qZY9dVoa3vUMVfuVc16+UOVWjggMrYUWub
Aqo5r3arrIkuhz+hyjY/rgrt+E1Vrm2eypgrkml6TGVMWcEXvvCFL3zhC1/4
whe+8IUvfOELX/jCF77whS984Qtf+MIXvvB1l/gyMi7bbVyAO9GzTmWcOW5c
qTx7cZbKuCi2sQq6sRaBMbXDONPfOLfduL65MQXCuJcB1tiuve0y42EYa90b
uzfdWavacDGoGssBiS984Qtf+MIXvvCFL3zhC1/4whe+8IUvfOELX/jCF77w
hS984euu9UV0V3Wnffk8NR4fvohuNspXBSAObA0NfBHdapgvAWRsI+P1+oZ+
rcUX0a3KfEkgzpThi6jYqO8PJ8RX+ZjyTZ6g3Tjlj4HukkYc8JPgq/yvnvLN
n6BdOuWPgY29SxpxwOPrzu5S1zetNvYt7p877avCwJfLmlYb+xb3z+T8+zKD
MW3HRPtiMBgMBoPBYDAYDAaDwXDLeAszh+/GMWxzbs3crKn1ZqbyMU3MyHhr
i++FFbfP1dvreBT3RumAqLDHJuURuMXXiM3Jf1jYjaUbbhplLyS3brp7e52O
2/uneGv0HpvYcUdmDt89Y+Tm5G+Vva67Yxsrj8I2T5/tdTgq7I1JPOhd46sw
hvkq+8bATds4fBQPn+myvU5G4TuakV/MJ/Xlx2XPxfT6+jV0/JShcv32jm+U
7Zlhe2yy/nI3PRdlm+Pyn0eGflof9sy5fHsdDp+ntA+KvkbtsckY7vXl6vfT
Sm+OlW+hi7d3HOP2Liq+vTF6jzEYDAaDwWAwGAwG424b/weMn+md
    "], {{0, 288}, {288, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{288, 288},
  PlotRange->{{0, 288}, {0, 288}}]], "Output",
 ImageSize->{292, 288},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[50]=",
 CellID->6476097]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All", ",", "15", ",", "15"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[63]:=",
 CellID->106250135],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
cn8NrHIW8311ZmC801Ork/4FZDmU/g==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1., 0.},
  Frame->True,
  FrameLabel->{None, None},
  ImageSize->Medium,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 ImageSize->{364, 230},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[63]=",
 CellID->298526287]
}, Open  ]],

Cell["\<\
To get a meaningful visualization of the data we need to put some physical \
units at the axes.\
\>", "Text",
 CellID->16698110]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectrum formatting", "Section",
 CellID->284766540],

Cell["\<\
Some of the functions in the SpectrumPlot`context require access to the \
header and data information. Most of these functions are low-level functions \
that are not necessary for the average user. In this section we will describe \
how the header and data information from the FITS file are converted to a \
spectrum data object. Each spectrum will be stored in the form \
{{\"Metadata\"},{List of y values}}. The x-scale is calculated from the \
Metadata header upon display.\
\>", "Text",
 CellID->236100974],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GetAbsoluteSpectralAxis",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/GetAbsoluteSpectralAxis"], "[", 
     StyleBox["head", "TI"], "]"}], Cell[
    "calculate explicit values for the spectral axis", "TableText"]}
  }]], "DefinitionBox",
 CellID->20026022],

Cell["\<\
Get the absolute frequency/velocity values for each data point.\
\>", "Caption",
 CellID->25769896],

Cell["\<\
The spectral axis is given in units of m/s. The data axis is given in Jy/beam.\
\>", "MathCaption",
 CellID->140220775],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"GetAbsoluteSpectralAxis", "[", "head", "]"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], ",", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "All", ",", "15", ",", "15"}], "]"}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<m/s\>\"", ",", "\"\<Jy/beam\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->654826367],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0., 0.},
  BaseStyle->{FontSize -> 15},
  Frame->True,
  FrameLabel->{
    FormBox["\"m/s\"", TraditionalForm], 
    FormBox["\"Jy/beam\"", TraditionalForm]},
  ImageSize->Medium,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 ImageSize->{364, 240},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[73]=",
 CellID->339893664]
}, Open  ]],

Cell["\<\
In the example data used so far, the whole data cube, i.e. the whole map, \
shared the same header information. This is common for regularly sampled \
maps, where, e.g. the absolute coordinates of an individual data point can be \
derived from its index and the header information. This is not necessarily \
always the case. For this reason we convert the data into spectrum data \
objects, where each spectrum is assigned its own, relevant metadata, \
collected from all available FITS header information.\
\>", "Text",
 CellID->264235474],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FormatSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/FormatSpectrum"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", 
      StyleBox["header", "TI"]}], "]"}], Cell[TextData[{
     "converts the ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " into ",
     StyleBox["spectrum data objects",
      FontSlant->"Italic"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ImportSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/ImportSpectrum"], "[", 
     StyleBox["file", "TI"], "]"}], Cell[
    "import one or more spectra", "TableText"]}
  }]], "DefinitionBox",
 CellID->981885737],

Cell["Convert/import FITS spectra.", "Caption",
 CellID->35594317],

Cell["Convert the data to the spectrum format.", "MathCaption",
 CellID->910190276],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"FormatSpectrum", "[", 
    RowBox[{"data", ",", "head"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->234615857],

Cell[BoxData[
 FrameBox[
  StyleBox[
   InterpretationBox["\<\"Spectrum formating done. 1024 Spectra found in a 32 \
\[Times] 32 (R.A. \[Times] Dec) array.\"\>",
    StringForm[
    "Spectrum formating done. 1024 Spectra found in a 32 \[Times] 32 (R.A. \
\[Times] Dec) array."],
    Editable->False],
   FontFamily->"Verdana",
   FontSize->11,
   FontColor->RGBColor[0.2, 0.4, 0.6]],
  Background->RGBColor[0.96, 0.98, 1.],
  FrameMargins->{{24, 24}, {8, 8}},
  FrameStyle->RGBColor[0.2, 0.4, 0.6],
  StripOnInput->False]], "PrintTemporary",
 CellID->10187]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "spectra", "]"}]], "Input",
 CellLabel->"In[75]:=",
 CellID->128483201],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "32", ",", "2"}], "}"}]], "Output",
 ImageSize->{75, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[75]=",
 CellID->32942078]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spectra", "[", 
  RowBox[{"[", 
   RowBox[{"15", ",", "15"}], "]"}], "]"}]], "Input",
 CellLabel->"In[77]:=",
 CellID->25269444],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"SIMPLE\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BITPIX\"\>", "\[Rule]", 
      RowBox[{"-", "32"}]}], ",", 
     RowBox[{"\<\"NAXIS\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"NAXIS1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"NAXIS2\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"NAXIS3\"\>", "\[Rule]", "256"}], ",", 
     RowBox[{"\<\"NAXIS4\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"EXTEND\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BSCALE\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"BZERO\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"BLANK\"\>", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\<\"TELESCOP\"\>", "\[Rule]", "\<\"NRAO 12M\"\>"}], ",", 
     RowBox[{"\<\"CDELT1\"\>", "\[Rule]", "0.00499999974886`"}], ",", 
     RowBox[{"\<\"CRPIX1\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"CRVAL1\"\>", "\[Rule]", "56.7042973449`"}], ",", 
     RowBox[{"\<\"CTYPE1\"\>", "\[Rule]", "\<\"RA---SIN\"\>"}], ",", 
     RowBox[{"\<\"CDELT2\"\>", "\[Rule]", 
      RowBox[{"-", "0.00999999949772`"}]}], ",", 
     RowBox[{"\<\"CRPIX2\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"CRVAL2\"\>", "\[Rule]", "68.0991262728`"}], ",", 
     RowBox[{"\<\"CTYPE2\"\>", "\[Rule]", "\<\"DEC--SIN\"\>"}], ",", 
     RowBox[{"\<\"CDELT3\"\>", "\[Rule]", 
      RowBox[{"-", "2600.814453`"}]}], ",", 
     RowBox[{"\<\"CRPIX3\"\>", "\[Rule]", "128.5`"}], ",", 
     RowBox[{"\<\"CRVAL3\"\>", "\[Rule]", "34000.`"}], ",", 
     RowBox[{"\<\"CTYPE3\"\>", "\[Rule]", "\<\"VELO-LSR\"\>"}], ",", 
     RowBox[{"\<\"CDELT4\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"CRPIX4\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"CRVAL4\"\>", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\<\"CTYPE4\"\>", "\[Rule]", "\<\"STOKES\"\>"}], ",", 
     RowBox[{"\<\"DATE-OBS\"\>", "\[Rule]", "\<\"1999-01-04T00:00:00.0\"\>"}],
      ",", 
     RowBox[{"\<\"RESTFREQ\"\>", "\[Rule]", "1.15271204005`*^11"}], ",", 
     RowBox[{"\<\"CELLSCAL\"\>", "\[Rule]", "\<\"CONSTANT\"\>"}], ",", 
     RowBox[{"\<\"BMAJ\"\>", "\[Rule]", "0.0152777768672`"}], ",", 
     RowBox[{"\<\"BMIN\"\>", "\[Rule]", "0.0152777768672`"}], ",", 
     RowBox[{"\<\"OBSERVER\"\>", "\[Rule]", "\<\"tth KEL\"\>"}], ",", 
     RowBox[{"\<\"OBJECT\"\>", "\[Rule]", "\<\"IC342\"\>"}], ",", 
     RowBox[{"\<\"EPOCH\"\>", "\[Rule]", "2000.`"}], ",", 
     RowBox[{"\<\"BUNIT\"\>", "\[Rule]", "\<\"JY/BEAM\"\>"}], ",", 
     RowBox[{"\<\"BPA\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"DATAMIN\"\>", "\[Rule]", 
      RowBox[{"-", "36.6547393799`"}]}], ",", 
     RowBox[{"\<\"DATAMAX\"\>", "\[Rule]", "34.1493377686`"}], ",", 
     RowBox[{"\<\"ORIGIN\"\>", 
      "\[Rule]", "\<\"Miriad Fits: version 1.1 27-nov-00\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25327038764953613`", ",", 
     RowBox[{"-", "0.24447289109230042`"}], ",", 
     RowBox[{"-", "1.7150647640228271`"}], ",", "1.0306800603866577`", ",", 
     RowBox[{"-", "0.8794206380844116`"}], ",", "0.009703596122562885`", ",", 
     "1.182068943977356`", ",", "2.4051151275634766`", ",", 
     "2.2422451972961426`", ",", "1.3350187540054321`", ",", 
     RowBox[{"-", "0.7645167112350464`"}], ",", 
     RowBox[{"-", "0.5465825200080872`"}], ",", "0.2534889280796051`", ",", 
     RowBox[{"-", "1.9256247282028198`"}], ",", 
     RowBox[{"-", "0.07277070730924606`"}], ",", "0.6389391422271729`", ",", 
     "1.0812777280807495`", ",", 
     RowBox[{"-", "0.4298717975616455`"}], ",", 
     RowBox[{"-", "0.03597899153828621`"}], ",", "0.5238165259361267`", ",", 
     "1.4255295991897583`", ",", "0.622265100479126`", ",", 
     "0.39713430404663086`", ",", "0.5032379627227783`", ",", 
     "0.09533414989709854`", ",", "0.017978085204958916`", ",", 
     "0.9543601870536804`", ",", 
     RowBox[{"-", "0.22018498182296753`"}], ",", 
     RowBox[{"-", "1.0632805824279785`"}], ",", 
     RowBox[{"-", "0.28603219985961914`"}], ",", 
     RowBox[{"-", "2.288285493850708`"}], ",", 
     RowBox[{"-", "0.9814802408218384`"}], ",", 
     RowBox[{"-", "1.915154218673706`"}], ",", 
     RowBox[{"-", "3.4868688583374023`"}], ",", 
     RowBox[{"-", "1.6346279382705688`"}], ",", "0.3167065382003784`", ",", 
     RowBox[{"-", "0.02914522960782051`"}], ",", 
     RowBox[{"-", "0.9256081581115723`"}], ",", "0.33719581365585327`", ",", 
     "2.206543445587158`", ",", "1.805497169494629`", ",", 
     "0.7527745962142944`", ",", "1.6790711879730225`", ",", 
     RowBox[{"-", "0.2248551845550537`"}], ",", 
     RowBox[{"-", "1.7250152826309204`"}], ",", 
     RowBox[{"-", "1.0889734029769897`"}], ",", 
     RowBox[{"-", "0.01657959818840027`"}], ",", "0.3578227162361145`", ",", 
     RowBox[{"-", "0.7979938983917236`"}], ",", "0.33623620867729187`", ",", 
     "0.03308245912194252`", ",", 
     RowBox[{"-", "0.5097796320915222`"}], ",", 
     RowBox[{"-", "1.3776745796203613`"}], ",", "1.3933221101760864`", ",", 
     "1.1409558057785034`", ",", 
     RowBox[{"-", "0.4953489899635315`"}], ",", "1.436183214187622`", ",", 
     "0.695405900478363`", ",", 
     RowBox[{"-", "0.5498969554901123`"}], ",", 
     RowBox[{"-", "0.5610618591308594`"}], ",", "0.38943663239479065`", ",", 
     RowBox[{"-", "1.6687289476394653`"}], ",", "1.1536662578582764`", ",", 
     RowBox[{"-", "1.6329410076141357`"}], ",", "0.661676824092865`", ",", 
     RowBox[{"-", "0.2133392095565796`"}], ",", 
     RowBox[{"-", "1.1287044286727905`"}], ",", "1.004105806350708`", ",", 
     "1.4304674863815308`", ",", "1.4735575914382935`", ",", 
     "1.6648565530776978`", ",", "0.8382300138473511`", ",", 
     "1.1352589130401611`", ",", 
     RowBox[{"-", "0.6317147612571716`"}], ",", "1.5644199848175049`", ",", 
     "0.6448630690574646`", ",", "0.37656694650650024`", ",", 
     "0.4596962332725525`", ",", 
     RowBox[{"-", "1.0543410778045654`"}], ",", "0.9483705759048462`", ",", 
     RowBox[{"-", "0.19779367744922638`"}], ",", 
     RowBox[{"-", "1.4317582845687866`"}], ",", 
     RowBox[{"-", "1.9916534423828125`"}], ",", 
     RowBox[{"-", "1.0595544576644897`"}], ",", "0.3251725137233734`", ",", 
     RowBox[{"-", "0.7970907688140869`"}], ",", 
     RowBox[{"-", "1.3328512907028198`"}], ",", 
     RowBox[{"-", "0.054222892969846725`"}], ",", "0.5184034705162048`", ",", 
     "1.7459022998809814`", ",", "0.39394453167915344`", ",", 
     "0.5562503933906555`", ",", 
     RowBox[{"-", "0.6817754507064819`"}], ",", "0.12391264736652374`", ",", 
     RowBox[{"-", "0.07176583260297775`"}], ",", 
     RowBox[{"-", "0.04390169307589531`"}], ",", 
     RowBox[{"-", "2.2942147254943848`"}], ",", 
     RowBox[{"-", "1.0934696197509766`"}], ",", 
     RowBox[{"-", "0.10798162966966629`"}], ",", 
     RowBox[{"-", "0.1056765615940094`"}], ",", 
     RowBox[{"-", "1.033869743347168`"}], ",", 
     RowBox[{"-", "0.04684103652834892`"}], ",", 
     RowBox[{"-", "1.1883103847503662`"}], ",", 
     RowBox[{"-", "0.25090640783309937`"}], ",", 
     RowBox[{"-", "0.3682757318019867`"}], ",", 
     RowBox[{"-", "0.3104921281337738`"}], ",", "0.769749104976654`", ",", 
     "0.5387520790100098`", ",", "2.4363090991973877`", ",", 
     "3.568584680557251`", ",", "2.404839038848877`", ",", 
     "3.5326967239379883`", ",", "3.9967567920684814`", ",", 
     "4.380991458892822`", ",", "5.452521324157715`", ",", 
     "6.475641250610352`", ",", "7.356410503387451`", ",", 
     "6.464193344116211`", ",", "6.6243157386779785`", ",", 
     "7.499696731567383`", ",", "6.791890621185303`", ",", 
     "9.337295532226562`", ",", "7.315685272216797`", ",", 
     "11.304756164550781`", ",", "13.085219383239746`", ",", 
     "14.057720184326172`", ",", "14.38901138305664`", ",", 
     "14.55630111694336`", ",", "14.860007286071777`", ",", 
     "14.43694019317627`", ",", "14.978962898254395`", ",", 
     "13.963010787963867`", ",", "13.45352840423584`", ",", 
     "13.019694328308105`", ",", "14.037378311157227`", ",", 
     "15.646977424621582`", ",", "16.35276985168457`", ",", 
     "15.058640480041504`", ",", "14.092862129211426`", ",", 
     "12.195205688476562`", ",", "7.102386474609375`", ",", 
     "9.114477157592773`", ",", "11.186979293823242`", ",", 
     "9.918728828430176`", ",", "7.707035064697266`", ",", 
     "6.705297470092773`", ",", "6.769930839538574`", ",", 
     "4.619788646697998`", ",", "1.4437249898910522`", ",", 
     "2.0491511821746826`", ",", "0.6099430918693542`", ",", 
     "0.6837944388389587`", ",", 
     RowBox[{"-", "0.9721964001655579`"}], ",", "1.2454198598861694`", ",", 
     "0.2666553854942322`", ",", "0.6938427090644836`", ",", 
     "0.09703127294778824`", ",", 
     RowBox[{"-", "0.3779902756214142`"}], ",", 
     RowBox[{"-", "0.01639910414814949`"}], ",", "0.2717306315898895`", ",", 
     "1.3063912391662598`", ",", "0.6799494624137878`", ",", 
     "1.8041518926620483`", ",", 
     RowBox[{"-", "0.2471620887517929`"}], ",", 
     RowBox[{"-", "0.1882154494524002`"}], ",", 
     RowBox[{"-", "0.7613927125930786`"}], ",", 
     RowBox[{"-", "0.14242033660411835`"}], ",", 
     RowBox[{"-", "1.084010124206543`"}], ",", 
     RowBox[{"-", "0.1975487619638443`"}], ",", "0.013597528450191021`", ",", 
     RowBox[{"-", "0.9932065606117249`"}], ",", 
     RowBox[{"-", "1.1816980838775635`"}], ",", 
     RowBox[{"-", "0.9127274751663208`"}], ",", "0.15396460890769958`", ",", 
     "1.7188643217086792`", ",", "0.2512418031692505`", ",", 
     "1.7562432289123535`", ",", 
     RowBox[{"-", "0.23353849351406097`"}], ",", 
     RowBox[{"-", "0.05578762665390968`"}], ",", 
     RowBox[{"-", "1.339388132095337`"}], ",", "0.578441321849823`", ",", 
     RowBox[{"-", "1.1667925119400024`"}], ",", "1.013660192489624`", ",", 
     "1.2065742015838623`", ",", "0.47921496629714966`", ",", 
     RowBox[{"-", "0.17413203418254852`"}], ",", 
     RowBox[{"-", "1.5861173868179321`"}], ",", 
     RowBox[{"-", "1.80484139919281`"}], ",", 
     RowBox[{"-", "0.4585666060447693`"}], ",", 
     RowBox[{"-", "0.3608199656009674`"}], ",", 
     RowBox[{"-", "0.17828117311000824`"}], ",", 
     RowBox[{"-", "0.19434766471385956`"}], ",", 
     RowBox[{"-", "0.14162059128284454`"}], ",", "1.8379234075546265`", ",", 
     RowBox[{"-", "0.3229527175426483`"}], ",", "2.5443339347839355`", ",", 
     RowBox[{"-", "0.37535998225212097`"}], ",", "0.3672826290130615`", ",", 
     "0.6326680183410645`", ",", "0.13261079788208008`", ",", 
     "0.18350571393966675`", ",", 
     RowBox[{"-", "1.8813432455062866`"}], ",", 
     RowBox[{"-", "2.1130948066711426`"}], ",", 
     RowBox[{"-", "1.148285150527954`"}], ",", 
     RowBox[{"-", "0.8926869630813599`"}], ",", "0.5631914138793945`", ",", 
     "0.06846245378255844`", ",", "0.6844805479049683`", ",", 
     "2.4451849460601807`", ",", "0.07720457762479782`", ",", 
     RowBox[{"-", "1.081874966621399`"}], ",", 
     RowBox[{"-", "1.1694648265838623`"}], ",", "0.20455899834632874`", ",", 
     "1.3204190731048584`", ",", "0.10787805914878845`", ",", 
     RowBox[{"-", "0.5981944799423218`"}], ",", "1.2086926698684692`", ",", 
     "1.2148185968399048`", ",", 
     RowBox[{"-", "0.6611417531967163`"}], ",", 
     RowBox[{"-", "1.9328842163085938`"}], ",", 
     RowBox[{"-", "1.9395229816436768`"}], ",", 
     RowBox[{"-", "1.1595162153244019`"}], ",", 
     RowBox[{"-", "0.776684045791626`"}], ",", 
     RowBox[{"-", "1.3956868648529053`"}], ",", 
     RowBox[{"-", "0.5240463614463806`"}], ",", 
     RowBox[{"-", "0.42268234491348267`"}], ",", "0.9753138422966003`", ",", 
     "1.6007121801376343`", ",", 
     RowBox[{"-", "0.9257014989852905`"}], ",", 
     RowBox[{"-", "0.5302405953407288`"}], ",", "0.9915260076522827`", ",", 
     RowBox[{"-", "0.4302835166454315`"}], ",", "0.04588695243000984`", ",", 
     "1.4843835830688477`", ",", "0.7211442589759827`", ",", 
     "0.14180663228034973`", ",", "1.0482221841812134`", ",", 
     "0.9533299207687378`", ",", 
     RowBox[{"-", "1.2584477663040161`"}], ",", 
     RowBox[{"-", "1.921570062637329`"}], ",", 
     RowBox[{"-", "0.28426843881607056`"}], ",", "0.2518068552017212`", ",", 
     RowBox[{"-", "0.553211510181427`"}], ",", 
     RowBox[{"-", "2.215090036392212`"}], ",", 
     RowBox[{"-", "0.07380083948373795`"}], ",", "1.9577239751815796`", ",", 
     "1.3451327085494995`", ",", 
     RowBox[{"-", "0.6590599417686462`"}], ",", "0.859923779964447`", ",", 
     RowBox[{"-", "0.7875536680221558`"}], ",", "1.1443027257919312`", ",", 
     "1.7866637706756592`", ",", 
     RowBox[{"-", "0.9616474509239197`"}], ",", 
     RowBox[{"-", "1.3902757167816162`"}], ",", "2.5711426734924316`", ",", 
     "1.2693926095962524`"}], "}"}]}], "}"}]], "Output",
 ImageSize->{570, 678},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[77]=",
 CellID->78065502]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MetaDataQ",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/MetaDataQ"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "test for a ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula"],
     " of rules"
    }], "TableText"]},
   {
    ButtonBox["MetaDataPattern",
     BaseStyle->"Link",
     ButtonData->"paclet:SpectrumPlot/ref/MetaDataPattern"], Cell[
    "pattern matching the metadata", "TableText"]},
   {
    RowBox[{
     ButtonBox["SpectrumQ",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SpectrumQ"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[TextData[{
     "True if ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"],
     " is a spectrum data object"
    }], "TableText"]},
   {
    ButtonBox["SpectrumPattern",
     BaseStyle->"Link",
     ButtonData->"paclet:SpectrumPlot/ref/SpectrumPattern"], Cell[
    "pattern matching a spectrum data object", "TableText"]},
   {
    RowBox[{
     ButtonBox["MultipleSpectraQ",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/MultipleSpectraQ"], "[", 
     StyleBox["list", "TI"], "]"}], Cell[TextData[{
     "True if ",
     Cell[BoxData[
      StyleBox["list", "TI"]], "InlineFormula"],
     " is a list of spectrum data objects"
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SpectrumArrayQ",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SpectrumArrayQ"], "[", 
     StyleBox["array", "TI"], "]"}], Cell[TextData[{
     "True if ",
     Cell[BoxData[
      StyleBox["array", "TI"]], "InlineFormula"],
     " is an array of spectrum data objects"
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->206597131],

Cell["Testing for spectrum data objects.", "Caption",
 CellID->214769396],

Cell["Testing the data structure:", "MathCaption",
 CellID->431993981],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetaDataQ", "[", "head", "]"}]], "Input",
 CellLabel->"In[78]:=",
 CellID->124464613],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[78]=",
 CellID->212910125]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetaDataQ", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[79]:=",
 CellID->672984781],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[79]=",
 CellID->281982189]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumQ", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[80]:=",
 CellID->113906629],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[80]=",
 CellID->440029110]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumArrayQ", "[", "spectra", "]"}]], "Input",
 CellLabel->"In[81]:=",
 CellID->97080644],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[81]=",
 CellID->247796542]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultipleSpectraQ", "[", "spectra", "]"}]], "Input",
 CellLabel->"In[85]:=",
 CellID->299146690],

Cell[BoxData["False"], "Output",
 ImageSize->{39, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[85]=",
 CellID->169508888]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with spectra", "Section",
 CellID->677377107],

Cell[TextData[StyleBox["Plotting spectra", "Subsection"]], "Text",
 CellID->557791641],

Cell["\<\
The SpectrumPlot`context offers the function SpectrumPlot to plot one or more \
astronomical spectra. By default the bottom x-axis is given in velocity units \
(usually in km/s) the top x-axis in frequency units (usually in GHz). \
\>", "Text",
 CellID->2031029],

Cell["Plotting an example spectrum:", "MathCaption",
 CellID->728490722],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"spectra", "[", 
    RowBox[{"[", 
     RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[121]:=",
 CellID->235635378],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{-300., 
       FormBox["115.38655500959901`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-200., 
       FormBox["115.34810467473265`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-100., 
       FormBox["115.30965433986634`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {0., 
       FormBox["115.271204005`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {100., 
       FormBox["115.23275367013368`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {200., 
       FormBox["115.19430333526736`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {300., 
       FormBox["115.15585300040102`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {320., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {340., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {360., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}},
  ImageSize->Medium,
  Method->{},
  PlotRangeClipping->True]], "Output",
 ImageSize->{364, 245},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[121]=",
 CellID->337088421]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"\"\<FrequencyAxis\>\"", "Top", Cell[
    "Shows the frequency at the 2nd x-axis. Switch off with None.", 
     "TableText"]},
   {"\"\<VelocityUnits\>\"", "\"\<km/s\>\"", Cell[
    "Unit of the velocity axis. ", "TableText"]},
   {"\"\<RestFrequency\>\"", "Automatic", Cell[TextData[{
     "Take the rest frequency ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["0", "TR"]]], "InlineFormula"],
     " from the header to calculate the velocity ",
     Cell[BoxData[
      FormBox[
       RowBox[{"v", "=", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["f", 
            SubscriptBox["f", "0"]]}], ")"}]}]}], TraditionalForm]], 
      "InlineMath"]
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 CellID->108820025],

Cell["Options for SpectrumPlot..", "Caption",
 CellID->116688844],

Cell["You can also plot multiple spectra in the same plot.", "Text",
 CellID->504855526],

Cell["Give a list of spectra as argument:", "MathCaption",
 CellID->469821564],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"14", ";;", "17"}], ",", 
        RowBox[{"14", ";;", "17"}]}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[127]:=",
 CellID->158033326],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvflbGtkax3ln5pf5cf6F+S/ml3LDDTfcd6PiGhfccMMNEXBD2ZdiVUEM
BA1KJGqIGu0YTWzsNtptG9O2Jl7ttLbder196fg8zsEyhGjM1kmMej4PMcWp
c4pTRdWX9z3b+/8S80LT/89//etfRf83+BOaXOpeWJhcHvb/gDcRpKKrGaS0
VDyJnJaRVvj/Ef8vkLgH/mX+H//6l337AAKBQCAQCAQCgUC+XmYU6YqZ01PA
m5fUmteP58Nw5H6ZcpRz3Vyb7sTx8l+kShigJo6sxyr54Xzy6p084BeojNOX
c7jn9C/rQ6v3yap08LZ77EMv2cd/aycyv6rnyRP4wLvqE9bqDZlfVfSj76/T
an3soMdTTr8Sr6r8cgv8j+V1bLxi3ax4vwv6aavkdISjMm+r5FlU7+QBv3Rl
Tt67Tl/Wh1bv01bpjffYG7/iz1erE5ntD+MbL53zbfbFa/WGzG/7iv8J62bz
zOHHOX308ZQZRW1t7Tsk62WlHBU/UUtwlPe7nJ+6So5aOWpweiXPononi3/5
yhz/eKcv60Or97mq9M7f5c9Zq+OZj9mur91X732jf/Jancxs36f4SOPsvep/
/K5wSrFr2qvLdfLDMc17da2Ov3+Z+GHV/oRVevU79Y5Knk31TjvgF6rMUZ7X
VeMNt+iHVe8TV+nkFfuoL/Af1ur1B9xh/iuw++pNt9kXrtWJzE4J/+gO+5ia
O3P6NcG09pX95mzJfcS1/LRVcuItlTyT6r2j+OevjPOtdXquT6obH14lxyH+
WWPCP/zW3pz5tNvsbGuFZX5t34c/hO/iHYrnZLO+nu/1XVg9j//Kf2SNP1mV
Tu46pZJnW73PaG+cWpk36+Ybv6xPbG98QJVOXrG3fMWfq1ZvyOzUxnK8SeHT
2hsfVKvjmV931r+wveFopH31uJ1o63ZuMTruTn1MjT9hlV6VeZnlTZU84+p9
RnvjtMo4tb077T31R/VT2hsfVKWTV+zUr/jz1OrtmY9X4dPqxsfWyllAPtwE
gkAgEAgEAoFAIBAIBAKBQCAQCAQCgXwh0k/wr3/962TiP9/7mQ4L934Ne7/C
KsG9H7T3I3TjWMrbV/756L2f6bBw79ew9yusEtz7/nu/gG6cCV9hlQ5grd6b
r7BKB7BWTnwS3YBAIJcKqBsQCORDgboBgUA+lI/TjY9rUIWca2y7/znrKkDO
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
/wH4f/rwR0o=
    "], {{0, 245}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 245},
  PlotRange->{{0, 360}, {0, 245}}]], "Output",
 ImageSize->{364, 245},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[127]=",
 CellID->506089223]
}, Open  ]],

Cell[TextData[{
 "SpectrumPlot takes all standard Options of ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ListPlot"]],"paclet:ref/ListPlot"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->15348453],

Cell["Change plotting options:", "MathCaption",
 CellID->115665251],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"14", ";;", "17"}], ",", 
        RowBox[{"14", ";;", "17"}]}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "40"}], "}"}]}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", "Black"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Red"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Gray", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"25", ",", 
           RowBox[{"-", "10"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", "100"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[133]:=",
 CellID->447481407],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
P/7bgf1FPw+QMXmAJqrsOinfWojGWCd0eAQDpCNWn9EkC+Jc9lNLCqW+slwf
tW8CAhyToEK9b65rgCqwOjr7vwaBDJ3Fh60+PPzkfbAH5eJRV2d1tG1l83eH
jhcybR5EMKXA6ri7YI8TZwzc3p+wNDrSQMwvLFWG4MmWb75baK/nTNseMKUY
SzFeUhjGEPsOsgUNBKu8Z1g5Dtd//DT4gLqx9RJOpHAGlPaV5PaUXn/aH6oL
AV+fLI/VWwng8/Snr31UsSyZTyM+wKRiNnop8vzUmHRk8tsVbC0SUKgDfoRf
pZZvHAa54uTtPlT14eEn7wM4KWgAiAYqIAgPY8HzkMB8dF50skacoE7Zcm6B
X7nsL5RGELIVXjSJ3T66sDb/swXfzpJiuxk1TcxQ4LbYiFQjb1ipHqTZ7R/l
HEE+NB9QN8p0N2aWVv9xiSAnI7E9kXdfDB5kP8QLPKf3Zq3i3hym1s860Raq
DndVQqb5X1dqyBjF5QiNN0Wl757ACBFMM8LvGcIWICSZa7mlUGkrlqg64lf6
+/sdDsfheHfbil4YgvgVII0+d2SuBSLv2BdKGpQkG3HswaI4mKb0Ls2VYmQ3
hDk0EzB4TMltMkEMr6KIIfZhSLwNGRkjtjlR3QDe8o4KFsjHxvnfrZNm+YC6
4VetNd75+ui87kmzIR+KEG3AtW9d0+lEawJsT28qr5dIrmRIe7K45vREhR9D
jK3Jwt1t7M7FIBHpKgwZyarvwciRFKLJv1njlau6VOua4RMn1gRU6I74lZaW
lsV39edc2vgx2VQ6v7YoVV5CEtOA1dHV4GpqmZ1ZzSVYqQOUenajIl2qvsiV
UnJqmZiatmR8dfs1St831yZZzHg2O5jJ9ZPFhP3p3CmPaAtB9B/jFP1zrukm
po7txH1yGCujNlaXTpTlg+jGjvPVqNiKJSG8rqEjMgLRQOeV+nT5YXJldf7f
UudvGqC82nHiEAx4eB/M2fAIlnWjiqH1u6DxK+xIq1P7pEuxTI43OzyXm6Ap
xyDh5DafarV3tQorVjXy72MkyIWqjjCiqzbVR6SOrTEe8Vvv043dvbYVvKUy
V5veQrnY05KjbvTbeeVEO4zJR8VF+fiRa1PGYp04T7cyP2mQZjJ6cijFiDar
o6Ykp4odx67HiZMjttd/NYlHEyt1/86BsXr2YI/ys617QaIx3/SfbILoD2Vv
DIl6wbusVn/riIxovdlJf+5fxS3x6N1/x/3jWJsHPsj09/dxKu+ZF484fUU5
xtiqlrAKXWCcPiy1NaJKF+TqXlXhV4apr/RTsnGqKLqhBLmOYSKBzbor5mkv
sbpcdh1X7JoZGCNFyjjXj/i5I3QD2BtFffQEfXo7Ejdql6opEcvfj4H4asoA
HeFlVF4A4Z5GqzDRtVSToTry+xfT1e2pUn9eOTeBoPRronrzLsc0y7uk+vvZ
SfqZ1Teu7uLQafQ833rptI7NHp2mKs9UX3H16DScQbZz59Or4ttcdyARmFvy
mhPl+lC6UUGyAt0o4vYckXGAovu36cbOCVdF52ebBIQrx0/f+nqQ1wdnas5W
r8Fpb1aGaoJoFvxv2+tka361yjtP6d1ETiqyZFC6ksKUGKlfeBlGwPWRcwLV
3lXqyNQ2DBfJVvY4HJsZbRbaFTu2yLUCI/BchG0Pjvg5h8Ph2X/Dk6HFR+vb
GwHqZDkfK7ELBJVJj+5pl8ee3uL1liTmX+RdBE+TsFMqCqSCxMMm3uywtW2Y
xyooISj9y3TRTSTvhsKEmsskauutHH+1uyl2Y+kFggndcX70J3FodvEi8yhb
C1CUaihLbz8iwfr2OjD8FtbmD8QvbWz8S/rPbzvfXYnxbNwOdMNcnXaivX0o
3WDK7Dgikk5u+3PHubA6886M+mAK+LjX9/lLWtqGH331/UmL50bUEf/yPecK
ZXFoYYDSd0SCw9SGaShRGvCYHCcxusjR1vZxj/c4zH31EA3YHohuDPMYuoB0
lffS2vzm7w7VcHMdgiGV+6oCwgSDjQStX6IMq8SGlXspWBiEFqTyIqsk4lEs
B+kc/AbsgTc0LLr7AFOKAJ8Co0QeTv6jeT6TjYQaoX946+VwSTK3/qKN6Frg
nl3cfMmY+GBxKEjtq8CWgWRrL+atfML8j1NZSh+epUxmq2XW+HFqU/RR6Xix
JTdAoxraN+eAsQF0A6jHPzthf01bxwg5ADk6DSFOlxt+VP3Po+WxVARz99lB
e3tyZSVYr/+HJfwgFOiDf3vXrfioWw10Q54Ytjz2w/H39kF0w7nzZxSdFVqv
SipWf/XMTtH5H84F5MIYy2CH0I+vG1WxWlGD/uHr+RxOBGrG3/jKuvX6hbUw
tvzqbeti2jxpSm470W4zk5X4S0rgzh8n8ZOnt0AZflqZOxC/5fwDvKNP9LsA
1womFqskDzf1YGjo8SJNcenuVDtV5ZVrSl96NqKu8ep+ICIhGF5sIOIV0vvE
gkewOUIvBTa81k8OdKMoXBnf0L68+huWrwJ/d11NqNMN9wYxFYjl5hPgp6Ad
zv82NFt9qDJOOd7BUtUWKRLc8eAt3DqhA3+b/Cs2llw9Wr+fHhVnxVG6km9N
m8GnhhEgRdJVvonpeWJSehelZd9dmjZbgW4sjx13Pp/jWCYrk++Yy7Spvo/h
hTh+Perws0I1WZj3ags4LgavFI9g1CPipaUN95i+Xdd0JXNAk7feXzYrQbg2
/+P27+vf2C1aHH9r79J8cICxAYr308Y7Kj9vi1ku3YiOud984/DW9/Gh+otG
lTeA8xNfprz1VQsVwTx5bJv8dsXzVpyzjYtylJnh0mM2qYDrSInlMiQhso7k
k5Zw97UZX9Neapx0zRThWNrAByEa5J5nmmH+HQQjPI6rAoTRONULAvh4cVqC
1HPimiO41ssGumGQpa3+9JYBZl8Yie/IP+aB/LK53/oJDHhwhuXF3h18erNq
mCrDlRkiSPrQ2h7C9ZZipBzbLA8vlWJlfiHgcXsy9zANwRQ0ekmxccUxCiSh
PSlJSWrpZ98bvPLV/rMztrxc2ncdS0ICLmkx4r944f4lXV9ZwGmZWZ3vf3on
TRG9uzc1B/ib0ZWU2BYZrPEtiyxdHHL99Pz0j0iu743rN375aeFKt6qM788R
R9ysFtUHV3Io13NY+3MYDvNkSGjkrPW4N3OXsvK2WXJ0GnBmvhl6svX2ii2V
ee1AV6ldeeB17Hy1s/TzG2Ny66VTZ3cJV513WYUv/bf1d9fZguPCM0LAg1l3
vaSZcz8hQr83v6Kr/hyIM7pq1fuKBF6mg+xO4LupCr2Bn/dt3/7EJs8+aPX7
0toCKN6Duf7DmzpLc5Xh/rKIuNb06uPs6gP2FwUOrH9THTg/MSREaql2rXhO
8WXS1TqL65ybH7julnGtlRUtkWNF0/fe7cUcQHdDSuMFlzf6MpTYk5YQMDAq
RuSJVbKIUk3X9paTFN9xKRYpr3hrXk3L5VagGxtLv/7l3sDjgA7gwkdJ06Pk
DXeElIvC/25sAiva84UIHJNuO839Va3OYMix1XWBN4ZV4G3oTgkkCDxiI4Yh
IFnOrf+tfH1wKNmbHW46cjQ4NFxgMoEznMuMk5WFh5LJVaKghtq4QnUI31qg
ofqaqalsoXcVxbchKQDYG0/vDqQAn6XSp9nrUgBLKQiTRlxWUHtve/rajs3N
+PYOLFmVSr+CEfyFbryv/4ab+bVFgrUaDUQr4zfWlzRCnK2bmKbyC0Sw6eqA
4pK0EdVNkOCmZhBJC2tjSluZNGFeRI7cq16I++X5qgyboGy8nlyw7w6YcgvA
2bsmpR3xo55Q2P7MpogjEmw6VoFuVKfL3Ks5jH23DISCFNfUlBwKHqvHzwbF
10eTm03gorgO5Ic1XucQrtbVsbYJk8n2z3k+8+7uSdPmwUSxL9hDiiaU4M8n
h7Awl5DINsPQ4qLu8QS4akdMSYRgiKoA8i05S5EVXo+R32a6zC2HY9MLgzhP
Uvn2fH2BfnPfDAZ29dbbEqfuIYPidT6QHs6oSkqk5oVKIqIU8QW//fbzMX/u
Q9Vv+PH46RX0yDoZrSUN6EYRH1OXXOZahWdzG0NGftvaauekivz4QDcsovdW
EwHVdXdBATvBNyaJgqNYPG/H29VNg+xb22+fFsem40CVlOrKZRIzqE6KSy5q
nptcoWVaYglIFqHFM40yWCLzEi0OvXdMBDCZ0IBl8gZ40n/6+eeMUHlGoPKC
KgAcVG9bG7ClLfhCd/qni0P1Gl/3V644uL7Jp47kH6UK77/VxmH6ofG8YbW3
PBFI1vL0Sl9tPxL33vHjXz0bSUTigHm55dzyRRhYZXOYKLeY5pNBLqisj5SG
R9Xn+Ss60rWlgaKawGYStiEhkJYSIfGKfahWXEKwvPSAemy+txApzZIGl6ii
Wo1AKzz3D1zvQJoeL7dgeUd1+to9sj3lAK4eaKpE+3XaYD97+fsx8X1OtgUv
uM8p5/n31LrsgZaqdiQxTpBVKs68gBR45QgDGDLXq4Hrx1QmliSnqVGrXpIS
SasP5YvDf3mXde0GXPoCKwEEyhheZSzvI1ICJwXoRlkwoVlyD3wFihFM11eo
b7LCiNUVPjkyn5qinIqL3HSBuSFCOqF7yGLbYqjt4EL/6PhN4JUk8El4XxcO
M7MpAcHkiYDweUnwSnwUD1OOALmwzs5SbbfDaWpgdaApDyxO59z6r9hLIElW
IGlR3HAKLz9Ic6EJxE9NrsRghFp63PLM5BFHBPQBeN937AtAYRR2GsnVIr/U
xLqhpt288nqFLNeP/r5ObA68jGAE5v1WCSCJ7q2CpAggKU2pfg25WZrXZvDm
ugN8jvjpD6UbPiKlwDchN7OarI4Bj3ymAnO5sCa1zvxwdg6cedMVVj0xkxHK
ZfuJpcT3thRrSvyn7Fde7ThfOrfqFD71gXhqeFED1efJgv3J8tifrxu5BF6K
EdlbHUU040rW3ov+ydjyn3sqzUS8RUGRFEpidimpqkFRkWcoTqrKSnxLb6Ve
Apq/4FqVqwXq2f1bT2xvdVZ0/rmDSUK2tp2z1pEyQTFGkfzoyXSmrzLTGymr
koGDIpdVjcm1Glw0sCV2nK9AFttDBTh29D5f2thgSrDVzV6cUlyCxK+iMRJs
+v1Xl4N/SUeOLKcA3bjXPiKOM9R5u57Zd9a16m5pwe0n7m+n367zEQgvZEov
MVlhEu9Sdjy9NKyKnEIu8W8U+l2uJVMFQfrcIKlfSF1APg+b1lORR+T5KIJC
KFiSNx8JY6t8uGrZg4cH9l90rS9O2O7L0uCaNO+7KCjH1w1AsDZZxPdCW2P7
52yWaXPHlDFPGKspzHWd9jQ5cjGTfylJkePfUhZRwHItIAviBVmdSp/orGgE
nLpfln/hZwfVVaXJKy8A0xHd7cbmW3eyaYACXih3ntpwCAb4RE2JAbRc3BGl
mr7iqjCpj45Mq3ctatls7aG0DmCrEEFQVo4AV1UWXh+Q0eidQ0ltqYvS2vlm
YVR1ElkfnY3YRmb5qaGiuGCrztXk9ONXM+CKu1aIaN5/NrkVhFQES+PiMhTe
CSJCaKLMn6+o7LMpx8cvczrBDcOwmHb+dA5f+1ZQ+lZj9/ryz4hPIztDrs7x
l6a57hBxfCTY+fUrU9KUVBU7srM5432HAzzxW3f0jThNo3f1TdNj1pUMKoKR
PODnxOpy4lTcYO3jWauoIx7cjQsT9qLmALC1RpcIMjp+3gQ3Nri9d13C9T8m
IQDoBpuAqSOnMSWB6M7H+5S39bUPn/T2FZGcW38c/vUPohvgUc0OlDYwfMqz
cykyV7eBQgU2ikQPK1C2375XFIVwlWVFucSiaCE9tJl9Sf3O3QJLAynE8OgJ
JhPvp7Xva+XeYmx8WoKcl+d/Z1xZqYsemnEZKr+vbgJvVBSg9qyXSEFSimQk
EMjxVw/d++7p4ng914camscOT63mRuSXcgqSKa53TTgVTa+1Ela+nRf5NTQF
kpBgn7Xv503Fl9pz4zzLg55eoMw2IpLITQvKl8gbZZdxSHqIPC1dhKlBcgqp
VyuJYLfgRWbB81ZnfjAOkMCxT8xdB+8LPg9hiL3Khd5NJF9BuW9lDQ5sevrN
XbBnX0FmVoaEn5xZScGSw0pyMcrff/sjvPWydfZNbTyqfjWtLu8vWsEJ0vgF
1SozfRS+ImkW6RJZHCiIC4nlJpKS8AyRb1FWBYVy8RqLrvAOKfTiNmBy9EmR
GnKg0je80L8Jw0R8lGps0zssCvHoaEW3DStQBTCPaizYPaFupLYTmqRhO6/e
vFuBeuSoUpHSmPXt9dxifAO3XJETwC31VndRqmrD6FKsmXy5pRYRh2QTvVlj
y8s35TYuObQ6K0MZFs03RII9bG2v12twQCgcSxsjtjnwZnENbLnPb75RC3Sj
o7VIEBHETgv49dd9S3thdeberNWzVCMSudI7RBQckspJBHlrEUwQrya4QM1N
isjhBZamipuxyTyv1IZANSFJFU1ASgpLK0MQmjciar3DrvdhVofqSC1A3nUB
KXaaGNwY6O0B9kwiZOZdItMVmColJotQH1MrCKAj7Ov32PcGE0u1WRgkgdj4
4vlUfYYl11tlacM3UyPN3XUg44N2O5LqK4otUqZ4N1H8GVxcU3G4vbNVy7yi
oAfSyTp1A27tx3ebW+DYla3ZFRiEhaGLUqS1xmhwUDEKv0wcgo9CGFFsphbX
2lcEbOCpW8Z8rhfYWqF0jWD6et4BzCG05C8ef08i++BlOBLZi9wcBtKgTZBd
nCRxYwj4KokL/P7+yOFf/1D2BjmiArxea/KSawW+9VyvEiXWv6YpqBipEHeA
x7yqhNwUWpERJa1PqKPGKDwzTj5fQQfErS7OKPMDqLyIamba4Df2Or5/LYaY
Eos0pwVIO5JpCKZYnWt/tjB9bbY5UNMcrJvs2u/TDmyzi6XFmYmc5eV14Ifq
JNf1umpWvXeWl5ITdLEhPaaBFMQNTmSSw2pjXQYteG2BEzKg0/BD6sSBSUrv
UGNjkyrWR5X01tsKOCngxrg19J36Qn44mZTphZAz6wqCWbkxzKR8DkaOXCon
KXMTheVx1vIKuXcZcHIlpvQ6Kab7LquaMkAi5DNpweSK5EaqD4vozaz2BT96
67p4eGgRuDykbClwZgu42OJ4YhmGlUTVXlDGJhtz3dWtevbg3ZvDFcoL4eIa
X7kwQI2PKpaBO9C3WV5xOY8m86rGxxRQAqqwruksaisS+NmBTTHFclxIvlcz
DVOGhASqC4KU2DBwAjFUJKXZHMV4R8sR8LuLr/ZhFEgCu+voi35E/43D0Aa4
qn6O++v82mKaOR/fllbd6JdkjM0tSrigj+QSMVmNuIz2i3RKEFXk3yMv1qXE
sIPILN9iUo+xOZ/PagygJuZIfSI4xoTFlcnhKSNT7QPeobfN08QIQyerroHj
y9eF57pG42NqK0OBgDdHBxm6Xb+7vr5tndDVWwng1kLbwcG/Sv5Fek24wjeM
KAiu7yAQpBGXkaxghpCZ632ZG1rti8gwkUJsYnNMM3g71F2srYwS56awc7EI
iYow5FiaEFcfScFpkrllweCca3rq0EUtn08/rwitKKbFV5LTSArv/OoCf64M
3PPJHCMw5xJTVAR/5GKSTG/l5uM0YG817AimyKuhKRa8DbXFJUgERpYYLksM
ZIi8axOy61l+TQ35ouJGNStamo/rYl0e0Nd7nlvnzg7YLQiolGksiU+OD0LB
1DRha8haP1Cq1Obgy74I+JByS8Cb8toQ5+G0uVdEKeZgwNZSqcuJ7n/4HbCW
kW6kbaKrmlUJbsIkZlYxE0OXY2qVmOeLropZTUlwA8O7nu/NbMbqqHR0khZP
jtANWzZab/ql8O0GkHdmaYrMcA2hKo2qE/pwq3zJEi+/unovltKnGQFXgReY
JMPEl+NqOfjyuhCXk7u0Nm8ZVyrLevD8Kzr7BHCKc7UJwnjXTqqEcSUaQkO1
X55PM94f4Se6DBgygsmVXYoxGOvLzEi8obvqhiHL5VYsPhwS3aaX5omyvOVt
nQ8VmAhhGk1QF09l+aWFK8PLBeVJpbX1EYF8KVPoxawN1rSzgQKDHcrJOZxg
ujzMjynCCiPDa8p8KWSM5xHZRxfAjdHA0cppkRfTBOCZLYiub/RP5wYkRRdL
gRmQUFXHLQpliH2RgMCEZrFJdKVRFcorxVXLA3PyO2rzLtEqYgoK8pgsf1pG
FLvWt77Rm9OYnpbbGqnPSaEkNfkyMsHdGJwt9om9FK2qFoWSdbmMuy5jbELX
X5HawRXSKcrAcnF0uiDWS4kkZgpy/EWxFFZBQwK9IYhcGFadGlPqX8cQerME
WGBFS73iBD4XSH7VNRiSwi9UdSlc5JMQk4v4VWu9KKocce/hq+bY3MSpNYFy
XbboHVv/NsapXuV4h/srZYAbY8yO0AdHKDCj1/vlXiU5ct8ihle4wifeEMEi
+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
drCDHexgBzvYwQ52sIMd/H+A/wcmlLye
    "], {{0, 245}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 245},
  PlotRange->{{0, 360}, {0, 245}}]], "Output",
 ImageSize->{364, 245},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[133]=",
 CellID->6278173]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting spectrum data and properties", "Subsection",
 CellID->12687076],

Cell["\<\
The spectrum data can be easily extracted from the spectrum data object.\
\>", "Text",
 CellID->261543485],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Part",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Part"], "[", 
     RowBox[{
      StyleBox["spec", "TI"], ",", "2"}], "]"}], Cell[TextData[{
     "directly access raw ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"],
     " data"
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ComposeXYSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/ComposeXYSpectrum"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[TextData[{
     "calculate {",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["x", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["y", "TI"], 
         StyleBox["1", "TR"]]}], "}"}]], "InlineFormula"],
     ",\[Ellipsis]} spectrum data"
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SpectralAxisType",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SpectralAxisType"], "[", 
     StyleBox["head", "TI"], "]"}], Cell[
    "determine type of spectral dimension", "TableText"]},
   {
    RowBox[{
     ButtonBox["SpectralAxisConfiguration",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SpectralAxisConfiguration"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[
    "retrieve full information on spectral dimension", "TableText"]},
   {
    RowBox[{
     ButtonBox["GetCoordinateSystem",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/GetCoordinateSystem"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[
    "determine kind of coordinate system/map projection", "TableText"]},
   {
    RowBox[{
     ButtonBox["GetObservedCoordinates",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/GetObservedCoordinates"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[
    "determine coordinates of observation", "TableText"]}
  }]], "DefinitionBox",
 CellID->32997422],

Cell["XXXX.", "Caption",
 CellID->273296105],

Cell["Extract raw data:", "MathCaption",
 CellID->212233023],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"spectra", "[", 
     RowBox[{"[", 
      RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", "2"}], "]"}], "//", 
  "Short"}]], "Input",
 CellLabel->"In[139]:=",
 CellID->657385252],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"0.25327038764953613`", ",", 
    RowBox[{"-", "0.24447289109230042`"}], ",", 
    RowBox[{"\[LeftSkeleton]", "253", "\[RightSkeleton]"}], ",", 
    "1.2693926095962524`"}], "}"}],
  Short]], "Output",
 ImageSize->{262, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[139]//Short=",
 CellID->544094884]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->157708967],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
cn8NrHIW8311ZmC801Ork/4FZDmU/g==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1., 0.},
  Method->{},
  PlotRangeClipping->True]], "Output",
 ImageSize->{244, 143},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[140]=",
 CellID->24621230]
}, Open  ]],

Cell["\<\
To retrieve a related x-values we can use the function ComposeXY\
\>", "Text",
 CellID->257711663],

Cell["Extract {x,y} data pairs:", "MathCaption",
 CellID->332845814],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComposeXYSpectrum", "[", 
   RowBox[{"spectra", "[", 
    RowBox[{"[", 
     RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}], "//", "Short"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->72480971],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"365603.8427575`", ",", "0.25327038764953613`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "254", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "297603.8427575`"}], ",", 
      RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "}"}]}], "}"}],
  Short]], "Output",
 ImageSize->{340, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[144]//Short=",
 CellID->301611]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->294281647],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
384DrNjg347+Dzqf5no=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameLabel->{None, None},
  ImageSize->Medium,
  Method->{},
  PlotRangeClipping->True]], "Output",
 ImageSize->{364, 229},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[145]=",
 CellID->187059506]
}, Open  ]],

Cell["\<\
The X-values are calculated from the header information and are in units as \
specified in the header. In this case the header information says VELO-LSR, \
i.e. velocity in SI units in the local standard of rest frame.\
\>", "Text",
 CellID->132141689],

Cell["Determine the type of the spectral dimension:", "MathCaption",
 CellID->580826068],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectralAxisType", "[", "head", "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->32839027],

Cell[BoxData["\<\"VELO-LSR\"\>"], "Output",
 ImageSize->{60, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->516282192]
}, Open  ]],

Cell["Determine the full configuration of the spectral dimension:", \
"MathCaption",
 CellID->102202126],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectralAxisConfiguration", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->850182227],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"VELO-LSR\"\>", ",", "128.5`", ",", 
   RowBox[{"-", "2600.814453`"}], ",", "34000.`", ",", "256"}], 
  "}"}]], "Output",
 ImageSize->{275, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->55284070]
}, Open  ]],

Cell["\<\
Astronomical data comes in many subtle variations in terms of the used \
coordinate system, applied map prjections, and so on. To query where the data \
has been actually observed SpectrumPlot offers functions to extract the \
related information from the header.\
\>", "Text",
 CellID->538453806],

Cell["Determine the type of the coordinate system:", "MathCaption",
 CellID->270975333],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetCoordinateSystem", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->76327593],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"RA---SIN\"\>", ",", "\<\"DEC--SIN\"\>"}], "}"}]], "Output",
 ImageSize->{141, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->265885326]
}, Open  ]],

Cell["\<\
Determine the absolute coordinate (in Degrees) of an observed spectrum: \
\>", "MathCaption",
 CellID->102811053],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetObservedCoordinates", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->39685501],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"56.717702100550554`", ",", "68.08912627330228`"}], "}"}]], "Output",
 ImageSize->{127, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->89332554]
}, Open  ]],

Cell["\<\
Determine the relative coordinate offset (in Arcseconds) of an observed \
spectrum: \
\>", "MathCaption",
 CellID->353559455],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetObservedCoordinates", "[", 
   RowBox[{
    RowBox[{"spectra", "[", 
     RowBox[{"[", 
      RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RelativeCoordinates\>\""}]}], "]"}], 
  "*", "3600"}]], "Input",
 CellLabel->"In[27]:=",
 CellID->1948477],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17.999999095895998`", ",", 
   RowBox[{"-", "35.999998191791995`"}]}], "}"}]], "Output",
 ImageSize->{79, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[27]=",
 CellID->549368303]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3600", "*", 
      RowBox[{"GetObservedCoordinates", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Method", "\[Rule]", "\"\<RelativeCoordinates\>\""}]}], 
       "]"}]}], "&"}], "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"spectra", ",", "1"}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalDelta]R.A.\>\"", ",", "\"\<\[CapitalDelta]Dec\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->67920552],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
v6P/Z98D+wv/2Sdl3xz5/1tf7ar/k55yoP5XqP+l/Onb4R5n/a9Q/0v5U/e7
nQP1gnZCv0E/0rjCONO8g3ko85Lmqa1bWMeyrmmd274H+2DYX/jPvjn7KKn/
3fqsQ/7QkUvW/7H/2beXmPo/9v/C/l+3p+dCPaHd0I/Qr/z+OGPGncTh2P+Z
l4Q/9FnHsK612v9Z5+Z/D/YHfrNPyr651f5f2P/ZVx2Y+j/2P+nc0+z/SfnT
x5mY/p+UP30/t3OgXtBO6DfoRxpXGGeadzAPZV7SPLV1C+tY1jWtc9v3YB+M
fVH2ydk3aR+tfdX22fvdhd/hQEdvZ/8f/l/29Sam/+/29FyoJ7Qb+hH6lcYZ
xp2r/zfzUOYlzVNbt7COZV2T92P87IOgrwP/b/bJsW+D/YX/7LO27371/x74
f/O7LOjY8ez/TfnT553Yp+dCPaHd0I/QrzTOMO40DxHyNy9pntq6hXUs65rW
ue17sA/Gvij75OybtI/Wvmr77P3uwu9w/C7L7/Sg49dl/z/+/8vt6blQT2g3
9CP0K40zjDuJg/H/Z15yxTNvTR4d/3/WNeEPffZBrP7/7Ivi/zF/9lHaV7v6
/7PPnn0fyIf15nda9P/j/ycdPz+//7k9PRfqCe2GfoR+pXGGcad5CPIeKX/z
1NYtrGNZ17TObd+DfTD2RdknZ9+kfbT2Vdtn73cXfofjd1l+p+d3m37HC524
7/V2DtQL2gn9Bv1I4wrjTPMO5qHMS5qntm5hHcu6pnVu+x7sg7Evivdj/Oyj
XOO/2VfN/sBvfofhdzlr/De/00Nuidf4b37XDf12DtQL2gn9Bv1I4wrjTPMO
5qHMS5qntm5hHcu6pnVu+x7sg7Evyj453u/WR8v/u/XZsz+373DY39t3esjn
9h0vcmX9+d33fwComr+7
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameLabel->{
    FormBox["\"\[CapitalDelta]R.A.\"", TraditionalForm], 
    FormBox["\"\[CapitalDelta]Dec\"", TraditionalForm]},
  ImageSize->Medium,
  Method->{},
  PlotRange->{{-287.99998553433596`, 269.99998643844}, {-287.99998553433596`, 
   269.99998643844}},
  PlotRangeClipping->True,
  PlotRangePadding->{{11.159999439455518`, 11.159999439455518`}, {
   11.159999439455518`, 11.159999439455518`}}]], "Output",
 ImageSize->{364, 230},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[32]=",
 CellID->612617997]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Reduction", "Section",
 CellID->286520711],

Cell["\<\
SpectrumPlot offers several functions to perform standard data reduction \
task, including smoothing, averaging, masking and fitting. \
\>", "Text",
 CellID->396999728],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["AverageSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/AverageSpectrum"], "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["s", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["s", "TI"], 
        StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], "]"}], Cell[
    TextData[{
     "average a list of spectra ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CalculateRMS",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/CalculateRMS"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[TextData[{
     "calculate the RMS of ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MaskSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/MaskSpectrum"], "[", 
     RowBox[{
      StyleBox["spec", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["min", "TI"]], ",", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["max", "TI"]]}], "}"}], ",", "\[Ellipsis]"}], "}"}], ",", 
      SubscriptBox["f", 
       StyleBox["0", "TR"]]}], "]"}], Cell[
    "masks parts of the spectrum to be ignored during the fitting", 
     "TableText"]},
   {
    RowBox[{
     ButtonBox["RegridSpectralAxis",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/RegridSpectralAxis"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["spec", "TI"], 
       StyleBox["r", "TI"]], ",", 
      StyleBox["spec", "TI"]}], "]"}], Cell[TextData[{
     "spectral regridding of ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"],
     " to the reference spectrum ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["spec", "TI"], 
       StyleBox["r", "TI"]]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SmoothSpectrum",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SmoothSpectrum"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[TextData[{
     "smoothes a spectrum ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SubtractBaseline",
      BaseStyle->"Link",
      ButtonData->"paclet:SpectrumPlot/ref/SubtractBaseline"], "[", 
     StyleBox["spec", "TI"], "]"}], Cell[TextData[{
     "subtracts a polynomial baseline from a spectrum ",
     Cell[BoxData[
      StyleBox["spec", "TI"]], "InlineFormula"]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->506692023],

Cell["Data redutction functions.", "Caption",
 CellID->12306671],

Cell["\<\
If a list of spectra have a common spectral axis AverageSpectrum can be used \
to average them. So far two methods are supported: simple arithmetic mean and \
RMS weighted mean.\
\>", "Text",
 CellID->305680447],

Cell["Average spectrum of a 2 spectra:", "MathCaption",
 CellID->33519383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{"14", ",", "14"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"AverageSpectrum", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"spectra", "[", 
          RowBox[{"[", 
           RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
         RowBox[{"spectra", "[", 
          RowBox[{"[", 
           RowBox[{"14", ",", "14"}], "]"}], "]"}]}], "}"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], "\[Rule]", "0"}]}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Thick"}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[57]:=",
 CellID->99378613],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], LineBox[CompressedData["
1:eJwl13k4lF0UAPCxpixlKalk0IYktChxL1GULaJImsiWLB9F2kyrpPXTIn1l
iiylhSSk7siWSnZly5BJkXUiWb/e8/rH85tz77nnve8zz5yj6h5o7ynM+Psn
xGBQ/9cMiW1LrQ/F1EcBnC8owcrHW+opmNuYwEfSCe/CAs+AWQELR0jYn6Vn
q1zp9f6/+KTV9lLsSn0w3svvJ5uT+lNip4J5bifyyfMxh5zRlgPgw2sIUXHI
KnXLArOft7WjqNTZDfnnwUwpex4RTB7qXOABxsX/1qCdTs0jkWvAHKXldagk
DUl2Tafz2Vk2E12Re3Ntvu2HeiVndKNbzqJL0/PAHNazz0Tsqdc6hRgwb4Nu
IwoUL7UK8wUzoqInSb2r1s4GBGbnqbaR9c8u+BvNovdrpfaQR1P7jnJ+hsB+
rsEgUWTZXxQpoH1ItBsdz8q843UTzI12bEVdUopPSgPBbInoRuToEU6WbqDX
65oJEMlpLL80j14v6hFDNGYY8wYGgiEuEO9AMV6cPsdSMGfV7WE0licslBMP
5iYodhJveU/ZeaF0/OyWLlLpW6IaYQVm2TSPkLVcDb02NTDzzbQvKHHWeVPz
P/9APZH8T0jGv8c+pRzMyf04QMIL7Dwkk2h3eP8gbUrPQgKOgHH4rEliFTTz
VKU9mKtY/wxlFYddXaFBr5dQ/YFUlRsSb0wGwfnZ3hPoXMi65yO1YEbp7QLy
q/RO0c40MDvU9xZyYwrVcU+Auc23RtHbUI9v6s50vC/uD9IrKxo6o0PHE9xG
0H/qS6Z0itH5hSvGkdQvBZ247ECwxdB30sKpt2V5gtkj1/kk0/pO0CI5MMMm
op1Ejrhf+fk6AOIvjfqQa/LijAw/MKsk+AnR2fqz6uBsMDNuyt93IpQuMC7y
h/ex5e4w+fTogIJYMJhZrsMjD13Wrnw/H8w4GZpNIqZMOl55vw/qNW36RRwy
C0K3HQSz+AqDaPHuszeUF9LxhE1CeFTaOvtrpR9YT30YlefK1qceA3O45eMo
wbvuT6AWGE93GUFhCrfmrPq8F+o3MvmONufvMhw7BcZJBz8jlYAFrm90aft1
8ZBgzo8jZ7/4Qr6j576hkpJHt22iwaxLut/Qrf3BrxUMwIxDx4ZJoOrqloZ2
H8j/LLkOrf84Osm5QjvnVDdRPMxlehvTFpP4SroWnzbR7vIGu5zsQKTG0l1w
g/aXSAGKOS5zMscMzF38Ko94L6tOiOj3gvsLHKlCho03Cs3vgBlXVVuRzFlX
vuRmMMukpxa1rVAVr/rtCevD0vtIVit/UWwimBHZ/J6cu/hgo9sWMNZsH0Zu
hoE+Cyb2wPsKft+G9L7rR3U+ALMVon8g8WvDqU+3gVkv6otIg8mrd6GiYM5Y
9gR63HO8a126B+R79uDv9/nWBikRNzBzPLSVOFpIapdOA7OXmQ4QjcFy60sv
3KEeJ9xHxu9eDXDcA+aOJ1ajShvnS3NlwVj8+AN0f1T5aeur3bA/Fv1E4Slt
Fcl7wcxfk+3E2jG531+Rjmvb5CJV4X1yKwpZUO/RA5Vo8PFy/ZEgMCM+LJ2U
7hh04CrTPnijHK2V3f9D6tou2H9d8g1p3TuuebPHDfJLDTWRqMIz+xZagFlZ
GZ+Q7vwZj9Pv7gSX2fWR+rCbvUajrrBefnoPOV6ppvtuKxh/T8smGlppwU6P
d8B9GeU1k8pTKzPbpoB5yiK1KPzL68GA3S7w/EOPh4iqgcXq0VxnqOfC5T5S
cqXyYKQCmLdssp780+WSKx+wHeJr9D4TRfP20fiSbXCe7SsByb/jb7RUFcya
q1JBvIeHjmUfcoL18XETRNaezTWrcYTn381PIVkPpwpXatP+2DWOWGIx63dG
boX9/5FxJL5r3ukfPAeo/61IP3qafb/4wFowz7ZSCDvJ6UgIX7WH/P6iXxFj
X7blxe4tsP624QeUVGQSPWcjmLuiYBTZqbz/kMSxg/MOF8vhn/0p87x+2UJ8
5fGpGN9/GX8s2QbO73QRwdHbP6rdcLEGe5pPwS2SrfefSFvBfv8+OaxFBEve
cjfB+aFjM3BEsHgaL8QS7uPHE1n8fqGSzp9FFmB0VR6r1GtlyDZsgPMMvZSx
33njlZoXzCE+S0YFE7Ql2xSbQf3BGap4msDDcIfAFOJ7tRdgt6TQ1yFJJvC+
fWLU8APnKJPzzhjWt9Qo459KBlGWSsaw3tNsPr7K3nnpUIQhxNU9lbBWx4lr
D/kGUO+rj3K42jrlVtPmVXCf/T3TsV9m2V3pDH3IXxCpgOXnCpKNZ+tCnCuj
gLeK6Lq2jC2FfO3P5+LEisM+JqWL4X7iYufg6tvF+xOuqcF+ruYsvKFOTViy
cA44v1IOJwZlzyl3nQH5nNOmYhltgzKrut+Iuo/W+WMo3PefinvF/YRa3xUn
hI9GSK8uTZfmUvddki6FWQv7TzCxEvjadjHMKtJe+bhalTJv2vkZWHe4bYnV
lMWUWeZICLdqxs7rXLuUMvvBWjFc/3iRhNmL5WDHCRGsayEkLL9Fnwvfl2O/
UVxr42hr50rKzPebB9DAoazBp6cMwFHrryEXhSu9EfMNIb+l3SuU8cjvh022
EVjp9Tt0QT2hX0YDQ76MR+1oTdDlgKEDJpQ5nNQ+1JN3tKv5jSnUf86kF8VN
9fMpmm5Gmau9pAbZOG3np7maQ329xwRo5J65+9XUDZC/B31Dj3v1Wg4PbYR8
VR79yGUd09VjvSU8v/foJJKJkq7fdHkT5Gvd14MKakcc9Zo3Qz1JmsI4UO17
lZKmNeTXj5pA6oG1tkJhNpCPHcJD5S/ffPheYAv7m2q+EVPRzwt8ztpBfP+x
nyT2gc3XxmVb4LzrTVVowK7orm0tmG3k9IZY/DZkFRy2h3q1jrSje7cz5q9W
cwA/5eej4fUazQ/egtl5sQXEvjP+1vzArZDPUL8OpVye5fLvTEeoVymkGgmv
vjBbPA/MUxQdRNubRT6FuzvB+5CV7CcZJw9d65bYBuuXhfUiCc1+h91PwDzu
2G/kXuEtV+u4Hdbn7+xG2aFfKizGwNyqmR1IXtnxUt49Z3g+fs135Fvw3nq5
pQs4UyIZFfiaSiX2gvH0fB5SmpHzTvH6DngeEUEfCcnSiYpe5wrvM55fhkpd
kzZOtoFxmM0AUhdRFg+J2gnr754YIuGpMYXfdNwgruYzSaptp510qQOztWXb
iMYQ2+TjkV2QT/hyBzKlfs9lWVB/Q2w68qd+7/eA8ezczySO6geyaTcUVdP9
guRueL6Xis1ogOon3MAsdvIg3W+kgxkzLo6gTVQ/IuoOjvMfJdCvbAczOcu5
5B7Vzzykva27l+53JsActXW5ZITqh7Z4wP6KZXy6X7oPZn7SEBB7qp8aBnMM
EsbJUarf2rwH4s8e/iRpVD92B4yHS4bofm2A9g7XZCJM9XPmnuBvuItoU/1e
LJiRbNZHoB/sAnOO8gQI+kVjL7BxMw9lUP3kv2CsX8AlzVS/yQezVpE3dD9q
4A33FfnhIVq90U6mJpq2BKMFucdFd0u3gPFKVhe60F38YaOeD8Rnu9eiV1g4
7fhpMCdlRy/5HmMU/fIzmHHGqojIdxzcO6jlC+83tqOPGK/NtNSJALNKhNuQ
/4XeJb5VYIZRYy2J5WlKJCzcC/msW/NRgb5XR9NBMEvTjYd6ztwtnvUBzDWt
6iDKDU337VT8wPKnSpGF9uzT54LB7A+b60gI22FPYRGYd1VqjNyrvrh+YvY+
yF/4u4aULXqnZrAPzOxN7STD4WLCwQTMuDT1OVIvw60P5fwhn39uN7JnHuHy
PcE8v31N5GjIi3iVHDA+7zqEUooHjjlLBUA8ULoHVSstc4vZBebMHQpCwv6+
RmUZYMa8T31Em5s4b4p4IOTP6i4j2+V5o9gZjL3499FJr7mNh9LAHJ7a3+97
jlNu5iRt/ewJAvOgRhDs71iWSESpedEBzDGz7SNx1Dx5BMyIZY3Q82YSHVey
6Ccwj5bT+7+ktBFXal79A2Zq/P39GaDmWfV/4Hk0HQfoedcKzOj8MkjPw6F0
vG+gkGRS83I8HU/5r5JsoubpUjB2SehCMG8LwOycEQGCeXxeMLhJewJJUfP6
BjC3qqGS3KPm+SAwM6tQCMO8fxPMmvlaFP8P5Sh19w==
      "]]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
     LineBox[CompressedData["
1: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
/wN3VYLp
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{-300., 
       FormBox["115.38655500959901`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-200., 
       FormBox["115.34810467473265`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-100., 
       FormBox["115.30965433986634`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {0., 
       FormBox["115.271204005`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {100., 
       FormBox["115.23275367013368`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {200., 
       FormBox["115.19430333526736`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {300., 
       FormBox["115.15585300040102`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {320., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {340., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {360., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}},
  ImageSize->Medium,
  Method->{},
  PlotRangeClipping->True]], "Output",
 ImageSize->{364, 245},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[57]=",
 CellID->115187588]
}, Open  ]],

Cell["Average spectrum of a whole map:", "MathCaption",
 CellID->650337449],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AverageSpectrum", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"spectra", ",", "1"}], "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"Missing", "[", "]"}], "\[Rule]", "0"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->717289561],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{-300., 
       FormBox["115.38655500959901`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-200., 
       FormBox["115.34810467473265`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-100., 
       FormBox["115.30965433986634`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {0., 
       FormBox["115.271204005`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {100., 
       FormBox["115.23275367013368`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {200., 
       FormBox["115.19430333526736`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {300., 
       FormBox["115.15585300040102`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {320., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {340., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {360., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}},
  ImageSize->Medium,
  Method->{},
  PlotRangeClipping->True]], "Output",
 ImageSize->{364, 240},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[56]=",
 CellID->14171587]
}, Open  ]],

Cell["\<\
Averaging is also possible using RMS weighting, if the header information \
contains information on the RMS. This is usually only the case after baseline \
removal.\
\>", "Text",
 CellID->658746443],

Cell["Calculate the RMS of a spectrum:", "MathCaption",
 CellID->188643237],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateRMS", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"15", ",", "15"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[59]:=",
 CellID->822819386],

Cell[BoxData["4.291501091566261`"], "Output",
 ImageSize->{46, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[59]=",
 CellID->615751120]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateRMS", "[", 
  RowBox[{"spectra", "[", 
   RowBox[{"[", 
    RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->115202874],

Cell[BoxData["1.907669274373774`"], "Output",
 ImageSize->{53, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[70]=",
 CellID->387241262]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"spectra", "[", 
    RowBox[{"[", 
     RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\n", 
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{-300., 
       FormBox["115.38655500959901`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-200., 
       FormBox["115.34810467473265`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-100., 
       FormBox["115.30965433986634`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {0., 
       FormBox["115.271204005`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {100., 
       FormBox["115.23275367013368`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {200., 
       FormBox["115.19430333526736`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {300., 
       FormBox["115.15585300040102`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {320., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {340., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {360., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}},
  ImageSize->Medium,
  Method->{},
  PlotRangeClipping->True]}], "Input",
 NumberMarks->False,
 CellLabel->"In[68]:=",
 CellID->425420553],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"CalculateRMS", "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"spectra", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[62]:=",
 CellID->19271028],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.567]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.567]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0.5, 0.}, {1., 7.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{20.5, 30.717391304347828`}, {52.96897415569998, 
         56.75285573195641}}],
       StatusArea[#, 7]& ,
       TagBoxNote->"7"],
      StyleBox["7", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[7, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{1., 0.}, {1.5, 294.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{29.717391304347828`, 
         39.93478260869565}, {-61.17017047081345, 56.75285573195641}}],
       StatusArea[#, 294]& ,
       TagBoxNote->"294"],
      StyleBox["294", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[294, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{1.5, 0.}, {2., 302.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{38.93478260869565, 
         49.15217391304348}, {-64.35174941510653, 56.7528557319564}}],
       StatusArea[#, 302]& ,
       TagBoxNote->"302"],
      StyleBox["302", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[302, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2., 0.}, {2.5, 144.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{48.15217391304348, 
         58.369565217391305`}, {-1.515565265318628, 56.75285573195641}}],
       StatusArea[#, 144]& ,
       TagBoxNote->"144"],
      StyleBox["144", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[144, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2.5, 0.}, {3., 52.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{57.369565217391305`, 67.58695652173913}, {
         35.072592594051535`, 56.75285573195641}}],
       StatusArea[#, 52]& ,
       TagBoxNote->"52"],
      StyleBox["52", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[52, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3., 0.}, {3.5, 20.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{66.58695652173913, 76.80434782608695}, {
         47.79890837122377, 56.75285573195641}}],
       StatusArea[#, 20]& ,
       TagBoxNote->"20"],
      StyleBox["20", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[20, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3.5, 0.}, {4., 15.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{75.80434782608695, 86.02173913043478}, {
         49.787395211406924`, 56.75285573195641}}],
       StatusArea[#, 15]& ,
       TagBoxNote->"15"],
      StyleBox["15", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[15, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4., 0.}, {4.5, 16.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{85.02173913043478, 95.23913043478261}, {
         49.38969784337029, 56.75285573195641}}],
       StatusArea[#, 16]& ,
       TagBoxNote->"16"],
      StyleBox["16", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[16, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4.5, 0.}, {5., 10.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{94.23913043478261, 104.45652173913044`}, {
         51.77588205159009, 56.75285573195641}}],
       StatusArea[#, 10]& ,
       TagBoxNote->"10"],
      StyleBox["10", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[10, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5., 0.}, {5.5, 11.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{103.45652173913044`, 113.67391304347827`}, {
         51.37818468355346, 56.75285573195641}}],
       StatusArea[#, 11]& ,
       TagBoxNote->"11"],
      StyleBox["11", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[11, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5.5, 0.}, {6., 7.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{112.67391304347827`, 122.89130434782608`}, {
         52.96897415569998, 56.75285573195641}}],
       StatusArea[#, 7]& ,
       TagBoxNote->"7"],
      StyleBox["7", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[7, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6., 0.}, {6.5, 8.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{121.89130434782608`, 132.1086956521739}, {
         52.57127678766335, 56.75285573195641}}],
       StatusArea[#, 8]& ,
       TagBoxNote->"8"],
      StyleBox["8", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[8, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6.5, 0.}, {7., 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{131.1086956521739, 141.32608695652175`}, {
         54.957460995883146`, 56.75285573195641}}],
       StatusArea[#, 2]& ,
       TagBoxNote->"2"],
      StyleBox["2", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7., 0.}, {7.5, 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{140.32608695652175`, 150.5434782608696}, {
         55.35515836391978, 56.75285573195641}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7.5, 0.}, {8., 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{149.5434782608696, 159.7608695652174}, {
         54.957460995883146`, 56.75285573195641}}],
       StatusArea[#, 2]& ,
       TagBoxNote->"2"],
      StyleBox["2", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{8., 0.}, {8.5, 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{158.7608695652174, 168.97826086956522`}, {
         55.35515836391978, 56.75285573195641}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{8.5, 0.}, {9., 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{167.97826086956522`, 178.19565217391306`}, {
         55.35515836391978, 56.75285573195641}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{10.5, 0.}, {11., 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{204.84782608695653`, 215.06521739130437`}, {
         55.35515836391978, 56.75285573195641}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{11.5, 0.}, {12., 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{223.2826086956522, 233.5}, {55.35515836391978, 
         56.75285573195641}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{0.5, 12.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 151},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[62]=",
 CellID->219586213]
}, Open  ]],

Cell[TextData[{
 "It appears strange that the RMS seems to vary across the map. The reason \
for this is, that ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CalculateRMS"]],"paclet:SpectrumPlot/ref/CalculateRMS"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " calculates the RMS acoss the whole band, i.e. including the line signal! \
We have to blank out (mask) the signal, to calculate just the RMS of the \
noise."
}], "Text",
 CellID->234339396],

Cell["Calculate the RMS of a spectrum with the line masked:", "MathCaption",
 CellID->55890670],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateRMS", "[", 
  RowBox[{
   RowBox[{"MaskSpectrum", "[", 
    RowBox[{
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "120"}], "}"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Missing", "[", "]"}], "\[Rule]", "0"}]}], "]"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->232525241],

Cell[BoxData["0.970620097292474`"], "Output",
 ImageSize->{53, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[72]=",
 CellID->97663406]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpectrumPlot", "[", 
  RowBox[{
   RowBox[{"MaskSpectrum", "[", 
    RowBox[{
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{"15", ",", "15"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "120"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[78]:=",
 CellID->47815910],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJwl0ns4VHkYB/BBU0+R0lpKqbEpS1qlK8k7bZetdalY2+MSEzFyG+uaLhtp
3bbNWlrKZqdYt9K6JXrS7wirKTXGlkWPzLitMVZjMGVG2XrPH+c55/N839/7
vuc8x8SX5+KvyWAwfD5cH+82SuaRkq4Y9odHxuUtbZDvGMjVKUez+78WkoX5
j2N5SWjq33A1iZ22TGn3QnNKz8pBcjA9Z8smOt9qOkocCseLc+aj+ad6E+HO
jGudujf6o1kNUgWscq0ReNegGWU7tdipJUu7Gy6i2SvlGuyJ2VMjpn5ovp3X
FBz9tkeVbIOmZDHDpOUWaMsW0fnVsxKyUevGcuehKLS5TRvkus+xrLiPFnsK
3xNmeYCdfibtZdcrCW+uwDH2BDp+Q8QAdHmtO9oNdC51HIfdVT+F7jRAM5iJ
L0nZfPlZ/mgk9u8IvkEMOS6XtBrRYqNGMSTUVOcFXEGz3j5TgkzH8E8BDx2f
I+0HN784YrkPzSgM6gJS91KYvoLOk4zEYL7YXqxQRGB/EbcWMgP4cjcBWtwZ
+AvM3NfUqPsdzVmZNgbcT/z1VsSg45lWrUR0osXknCNta61xYkuZW/d9hmZ4
OLeTAoOLX+6d/g77BzprUrqhYy7FQjT7QOBrEtd4yE+7EE2dLHhP+pZVRYad
QccvH9SmHMM/vSByoc/zzFSk5q/YrM3mdC7b8xxMjLsLsmfDsR90XiNpkXZ3
VC/C6f8p7z8yKchrPnoLTV3LegHeLI0O6jxdzyjSYD+K8Rta7U7XH+6fAeun
zcokK7r+nsEw/Lb683kjTNpxPSrQmdS3ulrLw3rdR62kl991kOOP5pdcUZNq
p7zwtUvQHF7IOElW+WaMPgjDenvVz8SryKyyMhjNzhjqAKtvRttPLkXHW6RK
yRyNign75lD8/gMXXsA/ZdH6zAg0y0rOh5setluerERzjA+Jybl5s24ZT0Lw
/OQCJXGtbow5chLN0nFQgtmxlGzjNWixxy4FqBc61faLgnF+a1UvEd7T6yr5
nnauSgn53I5p3jq0uJE9BLH6uUZbO4Owf0OOhDg0+OyYuYBmbJ+UkFVhpl4P
N6L5yaOdMGEkPZPy6gTON65SkZaWsmvOP6KpoGgF5EZFPNDfTjuJpSI8k229
3QOBOC/KchB2P1PP8jPQjCrnJ8TwNMXi2qM5losURGb2w671Mi7uK1osB/L8
gO9ENlq8sV8JmQm6iXV70KyKzDfA/eLv/HPjAbgfO18FO15mN+3NQ1Mt7SOg
m+I1qO2AZjMtFNC32WRu+xt/7KexbYDUSAbX5hSg2T3zpiHtUulX3ofp/O6N
AfDewQs0fX8c81vLOsF6eFPqSCmaKgnugbmX35aUH6Gd9UpOunfVP46ZQ9cv
dB+D22MJMrsKP9zP6bCAJOTu09HyRnNODyuJ237t9YIFaEZbzywxnxI6pd/1
xfz1hJy8u54V5nacNl/4HETO7unL9dDxTQlS8ofauFxSfwz39XSdInHFfW1F
QWiOUeNN4uRWNB5qSOcPfxWDiWbIks1NHNxv22s1TN3esEkVjmb5be0CgeeU
K2WM5j9tlYCtXpRU57IPvp+RaJBIgt5ZXBnzxvP1tQRSm5JC1uxHi+19Ksn/
vthlJw==
      "]], LineBox[CompressedData["
1:eJwl0ntcTGkYB/CppoSyqFUhHZXrUuTTZpPeQ0uKmnQztaPGSBfUUMgl7eRa
26etsLRDGpNbmna30doS3qPRlS4i3QyDRuMy0nShGs02z/xxPud8P7/nfZ/3
OefM5nD9t+nTaLSIsUt754/fEV353c/U2KNgQmsp8g1mykWsNVoTo0va8LBw
DedMwVqtSWVdFv6rx+nloUFPrWXGEY9RqBvB2urhpTVv+G0/mpRm2u6d5a01
e06FHElahoOcpOvBDVI14toqmq0W+sB6vfxGbMdtYegl+kL/3RY1uLG84pFC
woB+gZsVeDW9zT461Q/WP3WtwDk3fN90OmzUmjaD2YtVfpWXGC1gwtOrFq/7
soItOeQP9Ybt6UiYK57lYhsAeUhND/7qsUB6owZMuilU2P993vlZ3EDwZGcl
vp41LfTU90FaUzP/lSB9lwxLoztgWSJvBDGlBq0HOMEwL9O8CYmPHvxDabwJ
fMpKjYwX9gZs+RssO9tVjzlNUVNbgpjQ3ylLhEv3vWhapwaTtnED2Mw6KPOO
MATOe+7IaxQjeeizxCsU3odDoQpLYlabXO4BU30un5HV5LI6i7O/gAnfPpRw
yzEt3Y0F++0tfIFqWVc9Na/B7AGvKmxnYG2UkLYZ9rvDHsIHCk4/eOsYBvkl
mRo/YUw4GvoMTM0LkeIFg7xVDUnhUC+yaMWrG0Y0gilsmOf94yocO9vlZUcE
mM2R1WD+nvh75qVgQR5Rgauri3J9J26B3Db6G1JNf5eUGgaWrSp8im3i7FkV
xWDqYSid9L4fvkJN50AuN2zDiebnp//IBNMyU1qRMOrZELdQ58fuXajx9pT2
glGdI4YoNGzqU/pm41Z4/9aHq9G8LannrK+A2SNWo9i/RLJv01cwebGbRh0e
pwnKXh8BZoersCjU1fnhRZ27sj7i1qK95oYqMO2G4Wukr1fc575mG+x3/0Qx
Whz4sXl/Dpjy6JYj1rV5YvEHMHE304A8OczJ/ugeCfMUSW4isc/FXXNPgQkW
oxdLBe0MtjxS9/1uqbBJv7kjf3kU9P/mUIdcPP0mPU0HU1xiAHH46UrTl2Ce
PLccZSirHnk6RUMebf8G3yX1RSnHwURDcB9SnF6ZXt4GFsi5fcise//2gR9i
oH7qfDl2dy3xcvwVTLNUjuLYjJ75Mc1g0stYg3NkC43z52yH87Mzxv6/ZZHd
z/eDeTkdCvzpxKWqaY/AVHngILbueH7Fz2YH1KsfyPC6xZbHf4sHk66mnTiB
FxDxoBLMrnTuQcInv3uMWu4EH7swhOrn1tku3wmmmHlK/PWAoX48BhPlX2TY
rp58VTg1FvIzt3uQP5FEybeBZZK0Tnw44b88mzKwIDn5GrpepUoOMYmD+cZT
X9ATK4ew0+FgItesG+nHxqysF4PJ0rkVaDF1eeY4Iy6sP1b5GTHNZCNkCJgq
SvmEjkbO6DwoAhN8234sLgu+XaIBk9S9Ucw1qt2QuGAXeM/SZkz/J9LNPADM
41s3IX4IfVFxEliguPkKLzUQzvC9CiZSSvWoahGa+KFRl1/oEmNWsHT45BCY
/cxfg1Sag+/t7XbDvAXHB1BagWXH/Q060y3k2CbgVm3YPp2Tj31AJeqAspE8
MJW/7B32vtp7PacWzJ7MUKFXjMwc5z5dvuisGiUOLUptnhkP65sqP2GT/LpE
7lowle0+iIUboqNMdoHJm9l08qdBw00Ff4IFcYx+9D9YSbXi
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{-300., 
       FormBox["115.38655500959901`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-200., 
       FormBox["115.34810467473265`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-100., 
       FormBox["115.30965433986634`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {0., 
       FormBox["115.271204005`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {100., 
       FormBox["115.23275367013368`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {200., 
       FormBox["115.19430333526736`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {300., 
       FormBox["115.15585300040102`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {20., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {40., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {60., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {80., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {120., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {140., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {160., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {180., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {220., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {240., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {260., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {280., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {320., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {340., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {360., 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}},
  ImageSize->Medium,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 ImageSize->{364, 245},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[78]=",
 CellID->535255167]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CalculateRMS", "[", 
     RowBox[{
      RowBox[{"MaskSpectrum", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "40"}], ",", "120"}], "}"}]}], "]"}], "/.", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], "\[Rule]", "0"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"spectra", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[76]:=",
 CellID->944328547],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.574]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.574]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0., 0.}, {0.5, 115.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{20.499999999999996`, 31.64577259475218}, {
         19.17913010738905, 56.42239255310209}}],
       StatusArea[#, 115]& ,
       TagBoxNote->"115"],
      StyleBox["115", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[115, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0.5, 0.}, {1., 383.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{30.64577259475218, 
         41.79154518950437}, {-65.28342933131614, 56.4223925531021}}],
       StatusArea[#, 383]& ,
       TagBoxNote->"383"],
      StyleBox["383", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[383, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{1., 0.}, {1.5, 228.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{40.79154518950437, 
         51.93731778425655}, {-16.43381473057247, 56.42239255310209}}],
       StatusArea[#, 228]& ,
       TagBoxNote->"228"],
      StyleBox["228", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[228, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{1.5, 0.}, {2., 158.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{50.93731778425655, 62.08309037900874}, {
         5.627301540731125, 56.42239255310209}}],
       StatusArea[#, 158]& ,
       TagBoxNote->"158"],
      StyleBox["158", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[158, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2., 0.}, {2.5, 47.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{61.08309037900874, 72.22886297376093}, {
         40.60992877094111, 56.42239255310209}}],
       StatusArea[#, 47]& ,
       TagBoxNote->"47"],
      StyleBox["47", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[47, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2.5, 0.}, {3., 21.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{71.22886297376093, 82.37463556851311}, {
         48.804057671711014`, 56.42239255310209}}],
       StatusArea[#, 21]& ,
       TagBoxNote->"21"],
      StyleBox["21", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[21, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3., 0.}, {3.5, 13.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{81.37463556851311, 92.5204081632653}, {
         51.32532810271714, 56.42239255310209}}],
       StatusArea[#, 13]& ,
       TagBoxNote->"13"],
      StyleBox["13", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[13, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3.5, 0.}, {4., 15.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{91.5204081632653, 102.66618075801749`}, {
         50.69501049496561, 56.42239255310209}}],
       StatusArea[#, 15]& ,
       TagBoxNote->"15"],
      StyleBox["15", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[15, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4., 0.}, {4.5, 8.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{101.66618075801749`, 112.81195335276968`}, {
         52.90112212209597, 56.42239255310209}}],
       StatusArea[#, 8]& ,
       TagBoxNote->"8"],
      StyleBox["8", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[8, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4.5, 0.}, {5., 14.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{111.81195335276968`, 122.95772594752187`}, {
         51.010169298841376`, 56.42239255310209}}],
       StatusArea[#, 14]& ,
       TagBoxNote->"14"],
      StyleBox["14", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[14, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5., 0.}, {5.5, 5.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{121.95772594752187`, 133.10349854227405`}, {
         53.84659853372327, 56.42239255310209}}],
       StatusArea[#, 5]& ,
       TagBoxNote->"5"],
      StyleBox["5", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[5, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5.5, 0.}, {6., 3.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{132.10349854227405`, 143.24927113702623`}, {
         54.476916141474796`, 56.42239255310209}}],
       StatusArea[#, 3]& ,
       TagBoxNote->"3"],
      StyleBox["3", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[3, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6., 0.}, {6.5, 5.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{142.24927113702623`, 153.39504373177843`}, {
         53.84659853372327, 56.42239255310209}}],
       StatusArea[#, 5]& ,
       TagBoxNote->"5"],
      StyleBox["5", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[5, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6.5, 0.}, {7., 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{152.39504373177843`, 163.5408163265306}, {
         54.792074945350564`, 56.42239255310209}}],
       StatusArea[#, 2]& ,
       TagBoxNote->"2"],
      StyleBox["2", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7., 0.}, {7.5, 3.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{162.5408163265306, 173.6865889212828}, {
         54.476916141474796`, 56.42239255310209}}],
       StatusArea[#, 3]& ,
       TagBoxNote->"3"],
      StyleBox["3", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[3, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7.5, 0.}, {8., 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{172.6865889212828, 183.83236151603498`}, {
         54.792074945350564`, 56.42239255310209}}],
       StatusArea[#, 2]& ,
       TagBoxNote->"2"],
      StyleBox["2", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{9.5, 0.}, {10., 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{213.26967930029153`, 224.41545189504373`}, {
         55.107233749226324`, 56.42239255310209}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{10., 0.}, {10.5, 1.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{223.41545189504373`, 234.5612244897959}, {
         55.107233749226324`, 56.42239255310209}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{0., 10.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{244, 152},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[76]=",
 CellID->607356381]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Introduction to SpectrumPlot",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:SpectrumPlot/guide/SpectrumPlot",
          BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 1, 10, 14, 36, 27.2487852}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "SpectrumPlot`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Spectrum Plot Tutorial", "language" -> "en", "paclet" -> "SpectrumPlot", 
    "status" -> "None", "summary" -> 
    "The function definitions in the SpectrumPlot`context provide support for \
importing and displaying astronomical spectral data. This loads the package: \
Astronomical spectra are usually stored in the FITS file format, composed of \
a header (Import[<FITS file>,\"Metadata\"]) and the actual spectrum data \
(Import[<FITS file>,\"RawData\"]). The header contains all information \
necessary to assign the data to an astronomical observation (e.g. object \
name, coordinates, OBS-ID, etc.), to describe the kind of data (e.g. spectral \
maps, integrated intensity maps, single spectra, etc.), to specify physical \
units of the data content (e.g. unit of the spectral axis, velocity or \
frequency, unit of the data axis, e.g. Jansky, erg/s/cm^2/sr/Hz, etc.) and \
any other explanatory information in order to make sense of the data.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$1731, "title" -> 
    "Introduction to SpectrumPlot", "titlemodifier" -> "", "windowtitle" -> 
    "Introduction to SpectrumPlot", "type" -> "Tutorial", "uri" -> 
    "SpectrumPlot/tutorial/Introduction to SpectrumPlot"}, 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[54768, 1344, 7291, 127, 309, "Output",
   CellTags->"RasterizedOutput",
   CellID->6476097],
  Cell[103378, 2465, 47758, 791, 266, "Output",
   CellTags->"RasterizedOutput",
   CellID->506089223],
  Cell[152711, 3314, 39358, 653, 266, "Output",
   CellTags->"RasterizedOutput",
   CellID->6278173]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 294897, 6606}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[600, 21, 6631, 141, 48, "AnchorBarGrid",
 CellID->1],
Cell[7234, 164, 125, 3, 8, "ExampleDelimiter",
 CellID->144127618],
Cell[CellGroupData[{
Cell[7384, 171, 65, 1, 44, "Title",
 CellID->509267359],
Cell[7452, 174, 26941, 475, 64, "TutorialJumpBox"],
Cell[34396, 651, 172, 4, 48, "Text",
 CellID->1534169418],
Cell[34571, 657, 66, 1, 31, "MathCaption",
 CellID->150216909],
Cell[34640, 660, 121, 3, 26, "Input",
 CellID->180576222],
Cell[CellGroupData[{
Cell[34786, 667, 58, 1, 62, "Section",
 CellID->139120837],
Cell[34847, 670, 1215, 33, 157, "Text",
 CellID->267157330],
Cell[36065, 705, 604, 18, 79, "DefinitionBox",
 CellID->2096742444],
Cell[36672, 725, 87, 1, 31, "Caption",
 CellID->1891092685],
Cell[36762, 728, 928, 26, 89, "Text",
 CellID->58814942],
Cell[CellGroupData[{
Cell[37715, 758, 53, 1, 52, "Subsection",
 CellID->199893152],
Cell[37771, 761, 931, 22, 70, "Text",
 CellID->918978030],
Cell[38705, 785, 190, 5, 70, "Text",
 CellID->187674665],
Cell[38898, 792, 716, 11, 70, "Text",
 CellID->16903384],
Cell[39617, 805, 551, 10, 70, "Text",
 CellID->847847178],
Cell[40171, 817, 306, 6, 70, "Text",
 CellID->77067171],
Cell[40480, 825, 527, 9, 70, "Text",
 CellID->869307705],
Cell[41010, 836, 84, 1, 70, "MathCaption",
 CellID->278991019],
Cell[CellGroupData[{
Cell[41119, 841, 452, 14, 70, "Input",
 CellID->600539441],
Cell[41574, 857, 1441, 46, 122, "Output",
 CellID->201178399]
}, Open  ]],
Cell[CellGroupData[{
Cell[43052, 908, 193, 6, 70, "Input",
 CellID->105523731],
Cell[43248, 916, 529, 14, 35, "Output",
 CellID->79267263]
}, Open  ]],
Cell[43792, 933, 1017, 31, 70, "DefinitionBox",
 CellID->602953070],
Cell[44812, 966, 66, 1, 70, "Caption",
 CellID->81663761],
Cell[44881, 969, 121, 3, 70, "Text",
 CellID->920779636],
Cell[45005, 974, 2400, 81, 70, "DefinitionBox",
 CellID->68756532],
Cell[47408, 1057, 75, 1, 70, "Caption",
 CellID->857629111],
Cell[47486, 1060, 131, 4, 70, "Text",
 CellID->334972571],
Cell[47620, 1066, 839, 23, 70, "DefinitionBox",
 CellID->374016427],
Cell[48462, 1091, 71, 1, 70, "Caption",
 CellID->522112224],
Cell[48536, 1094, 120, 3, 70, "MathCaption",
 CellID->836781195],
Cell[CellGroupData[{
Cell[48681, 1101, 117, 3, 70, "Input",
 CellID->2058623809],
Cell[48801, 1106, 157, 5, 35, "Output",
 CellID->2277538]
}, Open  ]],
Cell[CellGroupData[{
Cell[48995, 1116, 109, 3, 70, "Input",
 CellID->18074983],
Cell[49107, 1121, 159, 5, 35, "Output",
 CellID->652852132]
}, Open  ]],
Cell[CellGroupData[{
Cell[49303, 1131, 111, 3, 70, "Input",
 CellID->345306587],
Cell[49417, 1136, 159, 5, 35, "Output",
 CellID->342891254]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49625, 1147, 51, 1, 70, "Subsection",
 CellID->521222371],
Cell[49679, 1150, 290, 6, 70, "Text",
 CellID->314150999],
Cell[49972, 1158, 70, 1, 70, "MathCaption",
 CellID->439669535],
Cell[CellGroupData[{
Cell[50067, 1163, 375, 11, 70, "Input",
 CellID->91838802],
Cell[50445, 1176, 239, 7, 35, "Output",
 CellID->456417867]
}, Open  ]],
Cell[CellGroupData[{
Cell[50721, 1188, 186, 6, 70, "Input",
 CellID->50446376],
Cell[50910, 1196, 1167, 37, 92, "Output",
 CellID->77063853]
}, Open  ]],
Cell[52092, 1236, 329, 10, 70, "Text",
 CellID->87014715],
Cell[52424, 1248, 79, 1, 70, "MathCaption",
 CellID->84659338],
Cell[CellGroupData[{
Cell[52528, 1253, 253, 7, 70, "Input",
 CellID->119821856],
Cell[52784, 1262, 229, 7, 35, "Output",
 CellID->152950740]
}, Open  ]],
Cell[53028, 1272, 170, 4, 70, "Text",
 CellID->632934013],
Cell[53201, 1278, 61, 1, 70, "MathCaption",
 CellID->517735679],
Cell[CellGroupData[{
Cell[53287, 1283, 210, 7, 70, "Input",
 CellID->269877034],
Cell[53500, 1292, 206, 7, 35, "Output",
 CellID->330549164]
}, Open  ]],
Cell[CellGroupData[{
Cell[53743, 1304, 332, 12, 70, "Input",
 CellID->222267338],
Cell[54078, 1318, 259, 9, 35, "Output",
 CellID->52527193]
}, Open  ]],
Cell[CellGroupData[{
Cell[54374, 1332, 391, 10, 43, "Input",
 CellID->46005768],
Cell[54768, 1344, 7291, 127, 309, "Output",
 CellTags->"RasterizedOutput",
 CellID->6476097]
}, Open  ]],
Cell[CellGroupData[{
Cell[62096, 1476, 379, 10, 70, "Input",
 CellID->106250135],
Cell[62478, 1488, 2964, 58, 251, "Output",
 CellID->298526287]
}, Open  ]],
Cell[65457, 1549, 138, 4, 70, "Text",
 CellID->16698110]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65644, 1559, 58, 1, 70, "Section",
 CellID->284766540],
Cell[65705, 1562, 521, 9, 70, "Text",
 CellID->236100974],
Cell[66229, 1573, 337, 9, 70, "DefinitionBox",
 CellID->20026022],
Cell[66569, 1584, 109, 3, 70, "Caption",
 CellID->25769896],
Cell[66681, 1589, 129, 3, 70, "MathCaption",
 CellID->140220775],
Cell[CellGroupData[{
Cell[66835, 1596, 908, 26, 70, "Input",
 CellID->654826367],
Cell[67746, 1624, 4842, 89, 261, "Output",
 CellID->339893664]
}, Open  ]],
Cell[72603, 1716, 550, 9, 70, "Text",
 CellID->264235474],
Cell[73156, 1727, 743, 24, 70, "DefinitionBox",
 CellID->981885737],
Cell[73902, 1753, 66, 1, 70, "Caption",
 CellID->35594317],
Cell[73971, 1756, 83, 1, 70, "MathCaption",
 CellID->910190276],
Cell[CellGroupData[{
Cell[74079, 1761, 190, 6, 70, "Input",
 CellID->234615857],
Cell[74272, 1769, 557, 16, 70, "PrintTemporary",
 CellID->10187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74866, 1790, 113, 3, 70, "Input",
 CellID->128483201],
Cell[74982, 1795, 215, 7, 35, "Output",
 CellID->32942078]
}, Open  ]],
Cell[CellGroupData[{
Cell[75234, 1807, 152, 5, 70, "Input",
 CellID->25269444],
Cell[75389, 1814, 12852, 230, 699, "Output",
 CellID->78065502]
}, Open  ]],
Cell[88256, 2047, 1777, 56, 70, "DefinitionBox",
 CellID->206597131],
Cell[90036, 2105, 73, 1, 70, "Caption",
 CellID->214769396],
Cell[90112, 2108, 70, 1, 70, "MathCaption",
 CellID->431993981],
Cell[CellGroupData[{
Cell[90207, 2113, 109, 3, 70, "Input",
 CellID->124464613],
Cell[90319, 2118, 162, 5, 35, "Output",
 CellID->212910125]
}, Open  ]],
Cell[CellGroupData[{
Cell[90518, 2128, 201, 6, 70, "Input",
 CellID->672984781],
Cell[90722, 2136, 162, 5, 35, "Output",
 CellID->281982189]
}, Open  ]],
Cell[CellGroupData[{
Cell[90921, 2146, 191, 6, 70, "Input",
 CellID->113906629],
Cell[91115, 2154, 162, 5, 35, "Output",
 CellID->440029110]
}, Open  ]],
Cell[CellGroupData[{
Cell[91314, 2164, 116, 3, 70, "Input",
 CellID->97080644],
Cell[91433, 2169, 162, 5, 35, "Output",
 CellID->247796542]
}, Open  ]],
Cell[CellGroupData[{
Cell[91632, 2179, 119, 3, 70, "Input",
 CellID->299146690],
Cell[91754, 2184, 163, 5, 35, "Output",
 CellID->169508888]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91966, 2195, 59, 1, 70, "Section",
 CellID->677377107],
Cell[92028, 2198, 86, 1, 70, "Text",
 CellID->557791641],
Cell[92117, 2201, 272, 5, 70, "Text",
 CellID->2031029],
Cell[92392, 2208, 72, 1, 70, "MathCaption",
 CellID->728490722],
Cell[CellGroupData[{
Cell[92489, 2213, 264, 8, 70, "Input",
 CellID->235635378],
Cell[92756, 2223, 9106, 188, 266, "Output",
 CellID->337088421]
}, Open  ]],
Cell[101877, 2414, 841, 24, 70, "DefinitionBox3Col",
 CellID->108820025],
Cell[102721, 2440, 65, 1, 70, "Caption",
 CellID->116688844],
Cell[102789, 2443, 88, 1, 70, "Text",
 CellID->504855526],
Cell[102880, 2446, 78, 1, 70, "MathCaption",
 CellID->469821564],
Cell[CellGroupData[{
Cell[102983, 2451, 392, 12, 26, "Input",
 CellID->158033326],
Cell[103378, 2465, 47758, 791, 266, "Output",
 CellTags->"RasterizedOutput",
 CellID->506089223]
}, Open  ]],
Cell[151151, 3259, 254, 9, 70, "Text",
 CellID->15348453],
Cell[151408, 3270, 67, 1, 70, "MathCaption",
 CellID->115665251],
Cell[CellGroupData[{
Cell[151500, 3275, 1208, 37, 75, "Input",
 CellID->447481407],
Cell[152711, 3314, 39358, 653, 266, "Output",
 CellTags->"RasterizedOutput",
 CellID->6278173]
}, Open  ]],
Cell[CellGroupData[{
Cell[192106, 3972, 80, 1, 70, "Subsection",
 CellID->12687076],
Cell[192189, 3975, 116, 3, 70, "Text",
 CellID->261543485],
Cell[192308, 3980, 1975, 60, 70, "DefinitionBox",
 CellID->32997422],
Cell[194286, 4042, 44, 1, 70, "Caption",
 CellID->273296105],
Cell[194333, 4045, 60, 1, 70, "MathCaption",
 CellID->212233023],
Cell[CellGroupData[{
Cell[194418, 4050, 248, 9, 70, "Input",
 CellID->657385252],
Cell[194669, 4061, 391, 12, 49, "Output",
 CellID->544094884]
}, Open  ]],
Cell[CellGroupData[{
Cell[195097, 4078, 169, 5, 70, "Input",
 CellID->157708967],
Cell[195269, 4085, 2847, 54, 164, "Output",
 CellID->24621230]
}, Open  ]],
Cell[198131, 4142, 108, 3, 70, "Text",
 CellID->257711663],
Cell[198242, 4147, 68, 1, 70, "MathCaption",
 CellID->332845814],
Cell[CellGroupData[{
Cell[198335, 4152, 230, 7, 70, "Input",
 CellID->72480971],
Cell[198568, 4161, 525, 16, 49, "Output",
 CellID->301611]
}, Open  ]],
Cell[CellGroupData[{
Cell[199130, 4182, 316, 8, 70, "Input",
 CellID->294281647],
Cell[199449, 4192, 4628, 84, 250, "Output",
 CellID->187059506]
}, Open  ]],
Cell[204092, 4279, 262, 5, 70, "Text",
 CellID->132141689],
Cell[204357, 4286, 88, 1, 70, "MathCaption",
 CellID->580826068],
Cell[CellGroupData[{
Cell[204470, 4291, 115, 3, 70, "Input",
 CellID->32839027],
Cell[204588, 4296, 174, 5, 35, "Output",
 CellID->516282192]
}, Open  ]],
Cell[204777, 4304, 104, 2, 70, "MathCaption",
 CellID->102202126],
Cell[CellGroupData[{
Cell[204906, 4310, 207, 6, 70, "Input",
 CellID->850182227],
Cell[205116, 4318, 295, 9, 35, "Output",
 CellID->55284070]
}, Open  ]],
Cell[205426, 4330, 307, 6, 70, "Text",
 CellID->538453806],
Cell[205736, 4338, 87, 1, 70, "MathCaption",
 CellID->270975333],
Cell[CellGroupData[{
Cell[205848, 4343, 200, 6, 70, "Input",
 CellID->76327593],
Cell[206051, 4351, 235, 7, 35, "Output",
 CellID->265885326]
}, Open  ]],
Cell[206301, 4361, 123, 3, 70, "MathCaption",
 CellID->102811053],
Cell[CellGroupData[{
Cell[206449, 4368, 203, 6, 70, "Input",
 CellID->39685501],
Cell[206655, 4376, 239, 7, 35, "Output",
 CellID->89332554]
}, Open  ]],
Cell[206909, 4386, 135, 4, 70, "MathCaption",
 CellID->353559455],
Cell[CellGroupData[{
Cell[207069, 4394, 323, 10, 70, "Input",
 CellID->1948477],
Cell[207395, 4406, 259, 8, 35, "Output",
 CellID->549368303]
}, Open  ]],
Cell[CellGroupData[{
Cell[207691, 4419, 724, 21, 70, "Input",
 CellID->67920552],
Cell[208418, 4442, 4152, 77, 251, "Output",
 CellID->612617997]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212631, 4526, 53, 1, 70, "Section",
 CellID->286520711],
Cell[212687, 4529, 178, 4, 70, "Text",
 CellID->396999728],
Cell[212868, 4535, 2854, 92, 70, "DefinitionBox",
 CellID->506692023],
Cell[215725, 4629, 64, 1, 70, "Caption",
 CellID->12306671],
Cell[215792, 4632, 221, 5, 70, "Text",
 CellID->305680447],
Cell[216016, 4639, 74, 1, 70, "MathCaption",
 CellID->33519383],
Cell[CellGroupData[{
Cell[216115, 4644, 962, 29, 70, "Input",
 CellID->99378613],
Cell[217080, 4675, 17777, 333, 266, "Output",
 CellID->115187588]
}, Open  ]],
Cell[234872, 5011, 75, 1, 70, "MathCaption",
 CellID->650337449],
Cell[CellGroupData[{
Cell[234972, 5016, 377, 11, 70, "Input",
 CellID->717289561],
Cell[235352, 5029, 9950, 202, 261, "Output",
 CellID->14171587]
}, Open  ]],
Cell[245317, 5234, 208, 5, 70, "Text",
 CellID->658746443],
Cell[245528, 5241, 75, 1, 70, "MathCaption",
 CellID->188643237],
Cell[CellGroupData[{
Cell[245628, 5246, 194, 6, 70, "Input",
 CellID->822819386],
Cell[245825, 5254, 176, 5, 35, "Output",
 CellID->615751120]
}, Open  ]],
Cell[CellGroupData[{
Cell[246038, 5264, 192, 6, 70, "Input",
 CellID->115202874],
Cell[246233, 5272, 176, 5, 35, "Output",
 CellID->387241262]
}, Open  ]],
Cell[246424, 5280, 9241, 192, 70, "Input",
 CellID->425420553],
Cell[CellGroupData[{
Cell[255690, 5476, 206, 6, 70, "Input",
 CellID->19271028],
Cell[255899, 5484, 12921, 403, 70, "Output",
 CellID->219586213]
}, Open  ]],
Cell[268835, 5890, 481, 12, 70, "Text",
 CellID->234339396],
Cell[269319, 5904, 95, 1, 70, "MathCaption",
 CellID->55890670],
Cell[CellGroupData[{
Cell[269439, 5909, 432, 14, 70, "Input",
 CellID->232525241],
Cell[269874, 5925, 175, 5, 35, "Output",
 CellID->97663406]
}, Open  ]],
Cell[CellGroupData[{
Cell[270086, 5935, 412, 13, 70, "Input",
 CellID->47815910],
Cell[270501, 5950, 8440, 179, 266, "Output",
 CellID->535255167]
}, Open  ]],
Cell[CellGroupData[{
Cell[278978, 6134, 509, 16, 70, "Input",
 CellID->944328547],
Cell[279490, 6152, 12320, 383, 70, "Output",
 CellID->607356381]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[291849, 6540, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

